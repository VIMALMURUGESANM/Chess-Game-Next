/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CBharrath%20Kumar%5C%5Cchess%5C%5Capp%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!****************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CBharrath%20Kumar%5C%5Cchess%5C%5Capp%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \****************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/page.tsx */ \"(app-pages-browser)/./app/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDQmhhcnJhdGglMjBLdW1hciU1QyU1Q2NoZXNzJTVDJTVDYXBwJTVDJTVDcGFnZS50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0Qmc2VydmVyPWZhbHNlISIsIm1hcHBpbmdzIjoiQUFBQSxzSkFBb0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLz81NTg5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcQmhhcnJhdGggS3VtYXJcXFxcY2hlc3NcXFxcYXBwXFxcXHBhZ2UudHN4XCIpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CBharrath%20Kumar%5C%5Cchess%5C%5Capp%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./ChessGame.css":
/*!***********************!*\
  !*** ./ChessGame.css ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"014ca62b6edc\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL0NoZXNzR2FtZS5jc3MiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL0NoZXNzR2FtZS5jc3M/Mjk0NiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIjAxNGNhNjJiNmVkY1wiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./ChessGame.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./ChessGame.tsx":
/*!***********************!*\
  !*** ./ChessGame.tsx ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Square__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Square */ \"(app-pages-browser)/./Square.tsx\");\n/* harmony import */ var _chessLogic__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chessLogic */ \"(app-pages-browser)/./chessLogic.ts\");\n/* harmony import */ var _ChessGame_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ChessGame.css */ \"(app-pages-browser)/./ChessGame.css\");\n\nvar _s = $RefreshSig$();\n\n\n\n\nconst initialBoard = [\n    [\n        \"r\",\n        \"n\",\n        \"b\",\n        \"q\",\n        \"k\",\n        \"b\",\n        \"n\",\n        \"r\"\n    ],\n    [\n        \"p\",\n        \"p\",\n        \"p\",\n        \"p\",\n        \"p\",\n        \"p\",\n        \"p\",\n        \"p\"\n    ],\n    [\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\"\n    ],\n    [\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\"\n    ],\n    [\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\"\n    ],\n    [\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\"\n    ],\n    [\n        \"P\",\n        \"P\",\n        \"P\",\n        \"P\",\n        \"P\",\n        \"P\",\n        \"P\",\n        \"P\"\n    ],\n    [\n        \"R\",\n        \"N\",\n        \"B\",\n        \"Q\",\n        \"K\",\n        \"B\",\n        \"N\",\n        \"R\"\n    ]\n];\nconst ChessGame = ()=>{\n    _s();\n    const [board, setBoard] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialBoard);\n    const [selectedPiece, setSelectedPiece] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [currentPlayer, setCurrentPlayer] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"white\");\n    const [validMoves, setValidMoves] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [gameStatus, setGameStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [isGameOver, setIsGameOver] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [canWhiteCastleKingside, setCanWhiteCastleKingside] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [canWhiteCastleQueenside, setCanWhiteCastleQueenside] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [canBlackCastleKingside, setCanBlackCastleKingside] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [canBlackCastleQueenside, setCanBlackCastleQueenside] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const updateGameStatus = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        const isWhiteKing = currentPlayer === \"white\";\n        if ((0,_chessLogic__WEBPACK_IMPORTED_MODULE_3__.isCheckmate)(board, isWhiteKing)) {\n            setGameStatus(\"Checkmate! \".concat(currentPlayer === \"white\" ? \"Black\" : \"White\", \" wins!\"));\n            setIsGameOver(true);\n        } else if ((0,_chessLogic__WEBPACK_IMPORTED_MODULE_3__.isCheck)(board, isWhiteKing)) {\n            setGameStatus(\"\".concat(currentPlayer.charAt(0).toUpperCase() + currentPlayer.slice(1), \" is in check!\"));\n        } else {\n            setGameStatus(\"\".concat(currentPlayer.charAt(0).toUpperCase() + currentPlayer.slice(1), \"'s turn\"));\n        }\n    }, [\n        board,\n        currentPlayer\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        updateGameStatus();\n    }, [\n        board,\n        currentPlayer,\n        updateGameStatus\n    ]);\n    const handleSquareClick = (row, col)=>{\n        if (isGameOver) return;\n        if (selectedPiece) {\n            if (validMoves.some((param)=>{\n                let [r, c] = param;\n                return r === row && c === col;\n            })) {\n                movePiece(selectedPiece[0], selectedPiece[1], row, col);\n            } else {\n                setSelectedPiece(null);\n                setValidMoves([]);\n            }\n        } else {\n            const piece = board[row][col];\n            if (piece && (currentPlayer === \"white\" && piece === piece.toUpperCase() || currentPlayer === \"black\" && piece === piece.toLowerCase())) {\n                setSelectedPiece([\n                    row,\n                    col\n                ]);\n                setValidMoves((0,_chessLogic__WEBPACK_IMPORTED_MODULE_3__.getValidMoves)(board, row, col, true, currentPlayer === \"white\" ? canWhiteCastleKingside : canBlackCastleKingside, currentPlayer === \"white\" ? canWhiteCastleQueenside : canBlackCastleQueenside));\n            }\n        }\n    };\n    const handleDragStart = (e, row, col)=>{\n        const piece = board[row][col];\n        if (piece && (currentPlayer === \"white\" && piece === piece.toUpperCase() || currentPlayer === \"black\" && piece === piece.toLowerCase())) {\n            e.dataTransfer.setData(\"text/plain\", \"\".concat(row, \",\").concat(col));\n            setSelectedPiece([\n                row,\n                col\n            ]);\n            setValidMoves((0,_chessLogic__WEBPACK_IMPORTED_MODULE_3__.getValidMoves)(board, row, col, true, currentPlayer === \"white\" ? canWhiteCastleKingside : canBlackCastleKingside, currentPlayer === \"white\" ? canWhiteCastleQueenside : canBlackCastleQueenside));\n        } else {\n            e.preventDefault();\n        }\n    };\n    const handleDragOver = (e)=>{\n        e.preventDefault();\n    };\n    const handleDrop = (e, dropRow, dropCol)=>{\n        e.preventDefault();\n        const [startRow, startCol] = e.dataTransfer.getData(\"text\").split(\",\").map(Number);\n        if (validMoves.some((param)=>{\n            let [r, c] = param;\n            return r === dropRow && c === dropCol;\n        })) {\n            movePiece(startRow, startCol, dropRow, dropCol);\n        }\n    };\n    const movePiece = (startRow, startCol, endRow, endCol)=>{\n        const newBoard = board.map((row)=>[\n                ...row\n            ]);\n        const movingPiece = newBoard[startRow][startCol];\n        newBoard[endRow][endCol] = movingPiece;\n        newBoard[startRow][startCol] = \"\";\n        // Handle castling\n        if (movingPiece.toLowerCase() === \"k\" && Math.abs(startCol - endCol) === 2) {\n            if (endCol === 6) {\n                newBoard[endRow][5] = newBoard[endRow][7];\n                newBoard[endRow][7] = \"\";\n            } else if (endCol === 2) {\n                newBoard[endRow][3] = newBoard[endRow][0];\n                newBoard[endRow][0] = \"\";\n            }\n        }\n        // Update castling flags\n        if (movingPiece === \"K\") {\n            setCanWhiteCastleKingside(false);\n            setCanWhiteCastleQueenside(false);\n        } else if (movingPiece === \"k\") {\n            setCanBlackCastleKingside(false);\n            setCanBlackCastleQueenside(false);\n        } else if (movingPiece === \"R\") {\n            if (startRow === 7 && startCol === 0) setCanWhiteCastleQueenside(false);\n            if (startRow === 7 && startCol === 7) setCanWhiteCastleKingside(false);\n        } else if (movingPiece === \"r\") {\n            if (startRow === 0 && startCol === 0) setCanBlackCastleQueenside(false);\n            if (startRow === 0 && startCol === 7) setCanBlackCastleKingside(false);\n        }\n        setBoard(newBoard);\n        setSelectedPiece(null);\n        setValidMoves([]);\n        setCurrentPlayer(currentPlayer === \"white\" ? \"black\" : \"white\");\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"game-container\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"board\",\n                children: board.map((row, rowIndex)=>row.map((piece, colIndex)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Square__WEBPACK_IMPORTED_MODULE_2__.Square, {\n                            piece: piece,\n                            isSelected: (selectedPiece === null || selectedPiece === void 0 ? void 0 : selectedPiece[0]) === rowIndex && (selectedPiece === null || selectedPiece === void 0 ? void 0 : selectedPiece[1]) === colIndex,\n                            isValidMove: validMoves.some((param)=>{\n                                let [r, c] = param;\n                                return r === rowIndex && c === colIndex;\n                            }),\n                            onClick: ()=>handleSquareClick(rowIndex, colIndex),\n                            onDragStart: (e)=>handleDragStart(e, rowIndex, colIndex),\n                            onDragOver: handleDragOver,\n                            onDrop: (e)=>handleDrop(e, rowIndex, colIndex),\n                            isWhite: (rowIndex + colIndex) % 2 === 0,\n                            isGameOver: isGameOver\n                        }, \"\".concat(rowIndex, \"-\").concat(colIndex), false, {\n                            fileName: \"C:\\\\Users\\\\Bharrath Kumar\\\\chess\\\\ChessGame.tsx\",\n                            lineNumber: 138,\n                            columnNumber: 25\n                        }, undefined)))\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Bharrath Kumar\\\\chess\\\\ChessGame.tsx\",\n                lineNumber: 135,\n                columnNumber: 13\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"status\",\n                children: gameStatus\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Bharrath Kumar\\\\chess\\\\ChessGame.tsx\",\n                lineNumber: 153,\n                columnNumber: 13\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\Bharrath Kumar\\\\chess\\\\ChessGame.tsx\",\n        lineNumber: 134,\n        columnNumber: 9\n    }, undefined);\n};\n_s(ChessGame, \"vZ/9dRr9pJm6KDH8IGe/Zaq3B+U=\");\n_c = ChessGame;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ChessGame);\nvar _c;\n$RefreshReg$(_c, \"ChessGame\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL0NoZXNzR2FtZS50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWdFO0FBQzlCO0FBQ3dDO0FBQ2pEO0FBRXpCLE1BQU1RLGVBQXNCO0lBQ3hCO1FBQUM7UUFBSztRQUFLO1FBQUs7UUFBSztRQUFLO1FBQUs7UUFBSztLQUFJO0lBQ3hDO1FBQUM7UUFBSztRQUFLO1FBQUs7UUFBSztRQUFLO1FBQUs7UUFBSztLQUFJO0lBQ3hDO1FBQUM7UUFBSTtRQUFJO1FBQUk7UUFBSTtRQUFJO1FBQUk7UUFBSTtLQUFHO0lBQ2hDO1FBQUM7UUFBSTtRQUFJO1FBQUk7UUFBSTtRQUFJO1FBQUk7UUFBSTtLQUFHO0lBQ2hDO1FBQUM7UUFBSTtRQUFJO1FBQUk7UUFBSTtRQUFJO1FBQUk7UUFBSTtLQUFHO0lBQ2hDO1FBQUM7UUFBSTtRQUFJO1FBQUk7UUFBSTtRQUFJO1FBQUk7UUFBSTtLQUFHO0lBQ2hDO1FBQUM7UUFBSztRQUFLO1FBQUs7UUFBSztRQUFLO1FBQUs7UUFBSztLQUFJO0lBQ3hDO1FBQUM7UUFBSztRQUFLO1FBQUs7UUFBSztRQUFLO1FBQUs7UUFBSztLQUFJO0NBQzNDO0FBRUQsTUFBTUMsWUFBc0I7O0lBQ3hCLE1BQU0sQ0FBQ0MsT0FBT0MsU0FBUyxHQUFHViwrQ0FBUUEsQ0FBUU87SUFDMUMsTUFBTSxDQUFDSSxlQUFlQyxpQkFBaUIsR0FBR1osK0NBQVFBLENBQTBCO0lBQzVFLE1BQU0sQ0FBQ2EsZUFBZUMsaUJBQWlCLEdBQUdkLCtDQUFRQSxDQUFvQjtJQUN0RSxNQUFNLENBQUNlLFlBQVlDLGNBQWMsR0FBR2hCLCtDQUFRQSxDQUFxQixFQUFFO0lBQ25FLE1BQU0sQ0FBQ2lCLFlBQVlDLGNBQWMsR0FBR2xCLCtDQUFRQSxDQUFTO0lBQ3JELE1BQU0sQ0FBQ21CLFlBQVlDLGNBQWMsR0FBR3BCLCtDQUFRQSxDQUFVO0lBQ3RELE1BQU0sQ0FBQ3FCLHdCQUF3QkMsMEJBQTBCLEdBQUd0QiwrQ0FBUUEsQ0FBVTtJQUM5RSxNQUFNLENBQUN1Qix5QkFBeUJDLDJCQUEyQixHQUFHeEIsK0NBQVFBLENBQVU7SUFDaEYsTUFBTSxDQUFDeUIsd0JBQXdCQywwQkFBMEIsR0FBRzFCLCtDQUFRQSxDQUFVO0lBQzlFLE1BQU0sQ0FBQzJCLHlCQUF5QkMsMkJBQTJCLEdBQUc1QiwrQ0FBUUEsQ0FBVTtJQUVoRixNQUFNNkIsbUJBQW1CM0Isa0RBQVdBLENBQUM7UUFDakMsTUFBTTRCLGNBQWNqQixrQkFBa0I7UUFDdEMsSUFBSVAsd0RBQVdBLENBQUNHLE9BQU9xQixjQUFjO1lBQ2pDWixjQUFjLGNBQTRELE9BQTlDTCxrQkFBa0IsVUFBVSxVQUFVLFNBQVE7WUFDMUVPLGNBQWM7UUFDbEIsT0FBTyxJQUFJZixvREFBT0EsQ0FBQ0ksT0FBT3FCLGNBQWM7WUFDcENaLGNBQWMsR0FBa0UsT0FBL0RMLGNBQWNrQixNQUFNLENBQUMsR0FBR0MsV0FBVyxLQUFLbkIsY0FBY29CLEtBQUssQ0FBQyxJQUFHO1FBQ3BGLE9BQU87WUFDSGYsY0FBYyxHQUFrRSxPQUEvREwsY0FBY2tCLE1BQU0sQ0FBQyxHQUFHQyxXQUFXLEtBQUtuQixjQUFjb0IsS0FBSyxDQUFDLElBQUc7UUFDcEY7SUFDSixHQUFHO1FBQUN4QjtRQUFPSTtLQUFjO0lBRXpCWixnREFBU0EsQ0FBQztRQUNONEI7SUFDSixHQUFHO1FBQUNwQjtRQUFPSTtRQUFlZ0I7S0FBaUI7SUFFM0MsTUFBTUssb0JBQW9CLENBQUNDLEtBQWFDO1FBQ3BDLElBQUlqQixZQUFZO1FBRWhCLElBQUlSLGVBQWU7WUFDZixJQUFJSSxXQUFXc0IsSUFBSSxDQUFDO29CQUFDLENBQUNDLEdBQUdDLEVBQUU7dUJBQUtELE1BQU1ILE9BQU9JLE1BQU1IO2dCQUFNO2dCQUNyREksVUFBVTdCLGFBQWEsQ0FBQyxFQUFFLEVBQUVBLGFBQWEsQ0FBQyxFQUFFLEVBQUV3QixLQUFLQztZQUN2RCxPQUFPO2dCQUNIeEIsaUJBQWlCO2dCQUNqQkksY0FBYyxFQUFFO1lBQ3BCO1FBQ0osT0FBTztZQUNILE1BQU15QixRQUFRaEMsS0FBSyxDQUFDMEIsSUFBSSxDQUFDQyxJQUFJO1lBQzdCLElBQUlLLFNBQVUsbUJBQW1CLFdBQVdBLFVBQVVBLE1BQU1ULFdBQVcsTUFDeERuQixrQkFBa0IsV0FBVzRCLFVBQVVBLE1BQU1DLFdBQVcsRUFBRSxHQUFJO2dCQUN6RTlCLGlCQUFpQjtvQkFBQ3VCO29CQUFLQztpQkFBSTtnQkFDM0JwQixjQUFjWiwwREFBYUEsQ0FBQ0ssT0FBTzBCLEtBQUtDLEtBQUssTUFDekN2QixrQkFBa0IsVUFBVVEseUJBQXlCSSx3QkFDckRaLGtCQUFrQixVQUFVVSwwQkFBMEJJO1lBRTlEO1FBQ0o7SUFDSjtJQUVBLE1BQU1nQixrQkFBa0IsQ0FBQ0MsR0FBb0NULEtBQWFDO1FBQ3RFLE1BQU1LLFFBQVFoQyxLQUFLLENBQUMwQixJQUFJLENBQUNDLElBQUk7UUFDN0IsSUFBSUssU0FBVSxtQkFBbUIsV0FBV0EsVUFBVUEsTUFBTVQsV0FBVyxNQUN4RG5CLGtCQUFrQixXQUFXNEIsVUFBVUEsTUFBTUMsV0FBVyxFQUFFLEdBQUk7WUFDekVFLEVBQUVDLFlBQVksQ0FBQ0MsT0FBTyxDQUFDLGNBQWMsR0FBVVYsT0FBUEQsS0FBSSxLQUFPLE9BQUpDO1lBQy9DeEIsaUJBQWlCO2dCQUFDdUI7Z0JBQUtDO2FBQUk7WUFDM0JwQixjQUFjWiwwREFBYUEsQ0FBQ0ssT0FBTzBCLEtBQUtDLEtBQUssTUFDekN2QixrQkFBa0IsVUFBVVEseUJBQXlCSSx3QkFDckRaLGtCQUFrQixVQUFVVSwwQkFBMEJJO1FBRTlELE9BQU87WUFDSGlCLEVBQUVHLGNBQWM7UUFDcEI7SUFDSjtJQUVBLE1BQU1DLGlCQUFpQixDQUFDSjtRQUNwQkEsRUFBRUcsY0FBYztJQUNwQjtJQUVBLE1BQU1FLGFBQWEsQ0FBQ0wsR0FBb0NNLFNBQWlCQztRQUNyRVAsRUFBRUcsY0FBYztRQUNoQixNQUFNLENBQUNLLFVBQVVDLFNBQVMsR0FBR1QsRUFBRUMsWUFBWSxDQUFDUyxPQUFPLENBQUMsUUFBUUMsS0FBSyxDQUFDLEtBQUtDLEdBQUcsQ0FBQ0M7UUFDM0UsSUFBSTFDLFdBQVdzQixJQUFJLENBQUM7Z0JBQUMsQ0FBQ0MsR0FBR0MsRUFBRTttQkFBS0QsTUFBTVksV0FBV1gsTUFBTVk7WUFBVTtZQUM3RFgsVUFBVVksVUFBVUMsVUFBVUgsU0FBU0M7UUFDM0M7SUFDSjtJQUVBLE1BQU1YLFlBQVksQ0FBQ1ksVUFBa0JDLFVBQWtCSyxRQUFnQkM7UUFDbkUsTUFBTUMsV0FBV25ELE1BQU0rQyxHQUFHLENBQUNyQixDQUFBQSxNQUFPO21CQUFJQTthQUFJO1FBQzFDLE1BQU0wQixjQUFjRCxRQUFRLENBQUNSLFNBQVMsQ0FBQ0MsU0FBUztRQUNoRE8sUUFBUSxDQUFDRixPQUFPLENBQUNDLE9BQU8sR0FBR0U7UUFDM0JELFFBQVEsQ0FBQ1IsU0FBUyxDQUFDQyxTQUFTLEdBQUc7UUFFL0Isa0JBQWtCO1FBQ2xCLElBQUlRLFlBQVluQixXQUFXLE9BQU8sT0FBT29CLEtBQUtDLEdBQUcsQ0FBQ1YsV0FBV00sWUFBWSxHQUFHO1lBQ3hFLElBQUlBLFdBQVcsR0FBRztnQkFDZEMsUUFBUSxDQUFDRixPQUFPLENBQUMsRUFBRSxHQUFHRSxRQUFRLENBQUNGLE9BQU8sQ0FBQyxFQUFFO2dCQUN6Q0UsUUFBUSxDQUFDRixPQUFPLENBQUMsRUFBRSxHQUFHO1lBQzFCLE9BQU8sSUFBSUMsV0FBVyxHQUFHO2dCQUNyQkMsUUFBUSxDQUFDRixPQUFPLENBQUMsRUFBRSxHQUFHRSxRQUFRLENBQUNGLE9BQU8sQ0FBQyxFQUFFO2dCQUN6Q0UsUUFBUSxDQUFDRixPQUFPLENBQUMsRUFBRSxHQUFHO1lBQzFCO1FBQ0o7UUFFQSx3QkFBd0I7UUFDeEIsSUFBSUcsZ0JBQWdCLEtBQUs7WUFDckJ2QywwQkFBMEI7WUFDMUJFLDJCQUEyQjtRQUMvQixPQUFPLElBQUlxQyxnQkFBZ0IsS0FBSztZQUM1Qm5DLDBCQUEwQjtZQUMxQkUsMkJBQTJCO1FBQy9CLE9BQU8sSUFBSWlDLGdCQUFnQixLQUFLO1lBQzVCLElBQUlULGFBQWEsS0FBS0MsYUFBYSxHQUFHN0IsMkJBQTJCO1lBQ2pFLElBQUk0QixhQUFhLEtBQUtDLGFBQWEsR0FBRy9CLDBCQUEwQjtRQUNwRSxPQUFPLElBQUl1QyxnQkFBZ0IsS0FBSztZQUM1QixJQUFJVCxhQUFhLEtBQUtDLGFBQWEsR0FBR3pCLDJCQUEyQjtZQUNqRSxJQUFJd0IsYUFBYSxLQUFLQyxhQUFhLEdBQUczQiwwQkFBMEI7UUFDcEU7UUFFQWhCLFNBQVNrRDtRQUNUaEQsaUJBQWlCO1FBQ2pCSSxjQUFjLEVBQUU7UUFDaEJGLGlCQUFpQkQsa0JBQWtCLFVBQVUsVUFBVTtJQUMzRDtJQUVBLHFCQUNJLDhEQUFDbUQ7UUFBSUMsV0FBVTs7MEJBQ1gsOERBQUNEO2dCQUFJQyxXQUFVOzBCQUNWeEQsTUFBTStDLEdBQUcsQ0FBQyxDQUFDckIsS0FBSytCLFdBQ2IvQixJQUFJcUIsR0FBRyxDQUFDLENBQUNmLE9BQU8wQix5QkFDWiw4REFBQ2hFLDJDQUFNQTs0QkFFSHNDLE9BQU9BOzRCQUNQMkIsWUFBWXpELENBQUFBLDBCQUFBQSxvQ0FBQUEsYUFBZSxDQUFDLEVBQUUsTUFBS3VELFlBQVl2RCxDQUFBQSwwQkFBQUEsb0NBQUFBLGFBQWUsQ0FBQyxFQUFFLE1BQUt3RDs0QkFDdEVFLGFBQWF0RCxXQUFXc0IsSUFBSSxDQUFDO29DQUFDLENBQUNDLEdBQUdDLEVBQUU7dUNBQUtELE1BQU00QixZQUFZM0IsTUFBTTRCOzs0QkFDakVHLFNBQVMsSUFBTXBDLGtCQUFrQmdDLFVBQVVDOzRCQUMzQ0ksYUFBYSxDQUFDM0IsSUFBTUQsZ0JBQWdCQyxHQUFHc0IsVUFBVUM7NEJBQ2pESyxZQUFZeEI7NEJBQ1p5QixRQUFRLENBQUM3QixJQUFNSyxXQUFXTCxHQUFHc0IsVUFBVUM7NEJBQ3ZDTyxTQUFTLENBQUNSLFdBQVdDLFFBQU8sSUFBSyxNQUFNOzRCQUN2Q2hELFlBQVlBOzJCQVRQLEdBQWVnRCxPQUFaRCxVQUFTLEtBQVksT0FBVEM7Ozs7Ozs7Ozs7MEJBY3BDLDhEQUFDSDtnQkFBSUMsV0FBVTswQkFDVmhEOzs7Ozs7Ozs7Ozs7QUFJakI7R0E3SU1UO0tBQUFBO0FBK0lOLCtEQUFlQSxTQUFTQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL0NoZXNzR2FtZS50c3g/Y2UwOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCwgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBTcXVhcmUgfSBmcm9tICcuL1NxdWFyZSc7XG5pbXBvcnQgeyBnZXRWYWxpZE1vdmVzLCBpc0NoZWNrLCBpc0NoZWNrbWF0ZSwgQm9hcmQgfSBmcm9tICcuL2NoZXNzTG9naWMnO1xuaW1wb3J0ICcuL0NoZXNzR2FtZS5jc3MnO1xuXG5jb25zdCBpbml0aWFsQm9hcmQ6IEJvYXJkID0gW1xuICAgIFsncicsICduJywgJ2InLCAncScsICdrJywgJ2InLCAnbicsICdyJ10sXG4gICAgWydwJywgJ3AnLCAncCcsICdwJywgJ3AnLCAncCcsICdwJywgJ3AnXSxcbiAgICBbJycsICcnLCAnJywgJycsICcnLCAnJywgJycsICcnXSxcbiAgICBbJycsICcnLCAnJywgJycsICcnLCAnJywgJycsICcnXSxcbiAgICBbJycsICcnLCAnJywgJycsICcnLCAnJywgJycsICcnXSxcbiAgICBbJycsICcnLCAnJywgJycsICcnLCAnJywgJycsICcnXSxcbiAgICBbJ1AnLCAnUCcsICdQJywgJ1AnLCAnUCcsICdQJywgJ1AnLCAnUCddLFxuICAgIFsnUicsICdOJywgJ0InLCAnUScsICdLJywgJ0InLCAnTicsICdSJ11cbl07XG5cbmNvbnN0IENoZXNzR2FtZTogUmVhY3QuRkMgPSAoKSA9PiB7XG4gICAgY29uc3QgW2JvYXJkLCBzZXRCb2FyZF0gPSB1c2VTdGF0ZTxCb2FyZD4oaW5pdGlhbEJvYXJkKTtcbiAgICBjb25zdCBbc2VsZWN0ZWRQaWVjZSwgc2V0U2VsZWN0ZWRQaWVjZV0gPSB1c2VTdGF0ZTxbbnVtYmVyLCBudW1iZXJdIHwgbnVsbD4obnVsbCk7XG4gICAgY29uc3QgW2N1cnJlbnRQbGF5ZXIsIHNldEN1cnJlbnRQbGF5ZXJdID0gdXNlU3RhdGU8J3doaXRlJyB8ICdibGFjayc+KCd3aGl0ZScpO1xuICAgIGNvbnN0IFt2YWxpZE1vdmVzLCBzZXRWYWxpZE1vdmVzXSA9IHVzZVN0YXRlPFtudW1iZXIsIG51bWJlcl1bXT4oW10pO1xuICAgIGNvbnN0IFtnYW1lU3RhdHVzLCBzZXRHYW1lU3RhdHVzXSA9IHVzZVN0YXRlPHN0cmluZz4oJycpO1xuICAgIGNvbnN0IFtpc0dhbWVPdmVyLCBzZXRJc0dhbWVPdmVyXSA9IHVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcbiAgICBjb25zdCBbY2FuV2hpdGVDYXN0bGVLaW5nc2lkZSwgc2V0Q2FuV2hpdGVDYXN0bGVLaW5nc2lkZV0gPSB1c2VTdGF0ZTxib29sZWFuPih0cnVlKTtcbiAgICBjb25zdCBbY2FuV2hpdGVDYXN0bGVRdWVlbnNpZGUsIHNldENhbldoaXRlQ2FzdGxlUXVlZW5zaWRlXSA9IHVzZVN0YXRlPGJvb2xlYW4+KHRydWUpO1xuICAgIGNvbnN0IFtjYW5CbGFja0Nhc3RsZUtpbmdzaWRlLCBzZXRDYW5CbGFja0Nhc3RsZUtpbmdzaWRlXSA9IHVzZVN0YXRlPGJvb2xlYW4+KHRydWUpO1xuICAgIGNvbnN0IFtjYW5CbGFja0Nhc3RsZVF1ZWVuc2lkZSwgc2V0Q2FuQmxhY2tDYXN0bGVRdWVlbnNpZGVdID0gdXNlU3RhdGU8Ym9vbGVhbj4odHJ1ZSk7XG5cbiAgICBjb25zdCB1cGRhdGVHYW1lU3RhdHVzID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgICBjb25zdCBpc1doaXRlS2luZyA9IGN1cnJlbnRQbGF5ZXIgPT09ICd3aGl0ZSc7XG4gICAgICAgIGlmIChpc0NoZWNrbWF0ZShib2FyZCwgaXNXaGl0ZUtpbmcpKSB7XG4gICAgICAgICAgICBzZXRHYW1lU3RhdHVzKGBDaGVja21hdGUhICR7Y3VycmVudFBsYXllciA9PT0gJ3doaXRlJyA/ICdCbGFjaycgOiAnV2hpdGUnfSB3aW5zIWApO1xuICAgICAgICAgICAgc2V0SXNHYW1lT3Zlcih0cnVlKTtcbiAgICAgICAgfSBlbHNlIGlmIChpc0NoZWNrKGJvYXJkLCBpc1doaXRlS2luZykpIHtcbiAgICAgICAgICAgIHNldEdhbWVTdGF0dXMoYCR7Y3VycmVudFBsYXllci5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIGN1cnJlbnRQbGF5ZXIuc2xpY2UoMSl9IGlzIGluIGNoZWNrIWApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2V0R2FtZVN0YXR1cyhgJHtjdXJyZW50UGxheWVyLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgY3VycmVudFBsYXllci5zbGljZSgxKX0ncyB0dXJuYCk7XG4gICAgICAgIH1cbiAgICB9LCBbYm9hcmQsIGN1cnJlbnRQbGF5ZXJdKTtcblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIHVwZGF0ZUdhbWVTdGF0dXMoKTtcbiAgICB9LCBbYm9hcmQsIGN1cnJlbnRQbGF5ZXIsIHVwZGF0ZUdhbWVTdGF0dXNdKTtcblxuICAgIGNvbnN0IGhhbmRsZVNxdWFyZUNsaWNrID0gKHJvdzogbnVtYmVyLCBjb2w6IG51bWJlcikgPT4ge1xuICAgICAgICBpZiAoaXNHYW1lT3ZlcikgcmV0dXJuO1xuXG4gICAgICAgIGlmIChzZWxlY3RlZFBpZWNlKSB7XG4gICAgICAgICAgICBpZiAodmFsaWRNb3Zlcy5zb21lKChbciwgY10pID0+IHIgPT09IHJvdyAmJiBjID09PSBjb2wpKSB7XG4gICAgICAgICAgICAgICAgbW92ZVBpZWNlKHNlbGVjdGVkUGllY2VbMF0sIHNlbGVjdGVkUGllY2VbMV0sIHJvdywgY29sKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgc2V0U2VsZWN0ZWRQaWVjZShudWxsKTtcbiAgICAgICAgICAgICAgICBzZXRWYWxpZE1vdmVzKFtdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IHBpZWNlID0gYm9hcmRbcm93XVtjb2xdO1xuICAgICAgICAgICAgaWYgKHBpZWNlICYmICgoY3VycmVudFBsYXllciA9PT0gJ3doaXRlJyAmJiBwaWVjZSA9PT0gcGllY2UudG9VcHBlckNhc2UoKSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgKGN1cnJlbnRQbGF5ZXIgPT09ICdibGFjaycgJiYgcGllY2UgPT09IHBpZWNlLnRvTG93ZXJDYXNlKCkpKSkge1xuICAgICAgICAgICAgICAgIHNldFNlbGVjdGVkUGllY2UoW3JvdywgY29sXSk7XG4gICAgICAgICAgICAgICAgc2V0VmFsaWRNb3ZlcyhnZXRWYWxpZE1vdmVzKGJvYXJkLCByb3csIGNvbCwgdHJ1ZSwgXG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRQbGF5ZXIgPT09ICd3aGl0ZScgPyBjYW5XaGl0ZUNhc3RsZUtpbmdzaWRlIDogY2FuQmxhY2tDYXN0bGVLaW5nc2lkZSxcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudFBsYXllciA9PT0gJ3doaXRlJyA/IGNhbldoaXRlQ2FzdGxlUXVlZW5zaWRlIDogY2FuQmxhY2tDYXN0bGVRdWVlbnNpZGVcbiAgICAgICAgICAgICAgICApKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBjb25zdCBoYW5kbGVEcmFnU3RhcnQgPSAoZTogUmVhY3QuRHJhZ0V2ZW50PEhUTUxEaXZFbGVtZW50Piwgcm93OiBudW1iZXIsIGNvbDogbnVtYmVyKSA9PiB7XG4gICAgICAgIGNvbnN0IHBpZWNlID0gYm9hcmRbcm93XVtjb2xdO1xuICAgICAgICBpZiAocGllY2UgJiYgKChjdXJyZW50UGxheWVyID09PSAnd2hpdGUnICYmIHBpZWNlID09PSBwaWVjZS50b1VwcGVyQ2FzZSgpKSB8fFxuICAgICAgICAgICAgICAgICAgICAgIChjdXJyZW50UGxheWVyID09PSAnYmxhY2snICYmIHBpZWNlID09PSBwaWVjZS50b0xvd2VyQ2FzZSgpKSkpIHtcbiAgICAgICAgICAgIGUuZGF0YVRyYW5zZmVyLnNldERhdGEoJ3RleHQvcGxhaW4nLCBgJHtyb3d9LCR7Y29sfWApO1xuICAgICAgICAgICAgc2V0U2VsZWN0ZWRQaWVjZShbcm93LCBjb2xdKTtcbiAgICAgICAgICAgIHNldFZhbGlkTW92ZXMoZ2V0VmFsaWRNb3Zlcyhib2FyZCwgcm93LCBjb2wsIHRydWUsXG4gICAgICAgICAgICAgICAgY3VycmVudFBsYXllciA9PT0gJ3doaXRlJyA/IGNhbldoaXRlQ2FzdGxlS2luZ3NpZGUgOiBjYW5CbGFja0Nhc3RsZUtpbmdzaWRlLFxuICAgICAgICAgICAgICAgIGN1cnJlbnRQbGF5ZXIgPT09ICd3aGl0ZScgPyBjYW5XaGl0ZUNhc3RsZVF1ZWVuc2lkZSA6IGNhbkJsYWNrQ2FzdGxlUXVlZW5zaWRlXG4gICAgICAgICAgICApKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBjb25zdCBoYW5kbGVEcmFnT3ZlciA9IChlOiBSZWFjdC5EcmFnRXZlbnQ8SFRNTERpdkVsZW1lbnQ+KSA9PiB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB9O1xuXG4gICAgY29uc3QgaGFuZGxlRHJvcCA9IChlOiBSZWFjdC5EcmFnRXZlbnQ8SFRNTERpdkVsZW1lbnQ+LCBkcm9wUm93OiBudW1iZXIsIGRyb3BDb2w6IG51bWJlcikgPT4ge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGNvbnN0IFtzdGFydFJvdywgc3RhcnRDb2xdID0gZS5kYXRhVHJhbnNmZXIuZ2V0RGF0YSgndGV4dCcpLnNwbGl0KCcsJykubWFwKE51bWJlcik7XG4gICAgICAgIGlmICh2YWxpZE1vdmVzLnNvbWUoKFtyLCBjXSkgPT4gciA9PT0gZHJvcFJvdyAmJiBjID09PSBkcm9wQ29sKSkge1xuICAgICAgICAgICAgbW92ZVBpZWNlKHN0YXJ0Um93LCBzdGFydENvbCwgZHJvcFJvdywgZHJvcENvbCk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgY29uc3QgbW92ZVBpZWNlID0gKHN0YXJ0Um93OiBudW1iZXIsIHN0YXJ0Q29sOiBudW1iZXIsIGVuZFJvdzogbnVtYmVyLCBlbmRDb2w6IG51bWJlcikgPT4ge1xuICAgICAgICBjb25zdCBuZXdCb2FyZCA9IGJvYXJkLm1hcChyb3cgPT4gWy4uLnJvd10pO1xuICAgICAgICBjb25zdCBtb3ZpbmdQaWVjZSA9IG5ld0JvYXJkW3N0YXJ0Um93XVtzdGFydENvbF07XG4gICAgICAgIG5ld0JvYXJkW2VuZFJvd11bZW5kQ29sXSA9IG1vdmluZ1BpZWNlO1xuICAgICAgICBuZXdCb2FyZFtzdGFydFJvd11bc3RhcnRDb2xdID0gJyc7XG5cbiAgICAgICAgLy8gSGFuZGxlIGNhc3RsaW5nXG4gICAgICAgIGlmIChtb3ZpbmdQaWVjZS50b0xvd2VyQ2FzZSgpID09PSAnaycgJiYgTWF0aC5hYnMoc3RhcnRDb2wgLSBlbmRDb2wpID09PSAyKSB7XG4gICAgICAgICAgICBpZiAoZW5kQ29sID09PSA2KSB7IC8vIEtpbmdzaWRlIGNhc3RsaW5nXG4gICAgICAgICAgICAgICAgbmV3Qm9hcmRbZW5kUm93XVs1XSA9IG5ld0JvYXJkW2VuZFJvd11bN107XG4gICAgICAgICAgICAgICAgbmV3Qm9hcmRbZW5kUm93XVs3XSA9ICcnO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChlbmRDb2wgPT09IDIpIHsgLy8gUXVlZW5zaWRlIGNhc3RsaW5nXG4gICAgICAgICAgICAgICAgbmV3Qm9hcmRbZW5kUm93XVszXSA9IG5ld0JvYXJkW2VuZFJvd11bMF07XG4gICAgICAgICAgICAgICAgbmV3Qm9hcmRbZW5kUm93XVswXSA9ICcnO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gVXBkYXRlIGNhc3RsaW5nIGZsYWdzXG4gICAgICAgIGlmIChtb3ZpbmdQaWVjZSA9PT0gJ0snKSB7XG4gICAgICAgICAgICBzZXRDYW5XaGl0ZUNhc3RsZUtpbmdzaWRlKGZhbHNlKTtcbiAgICAgICAgICAgIHNldENhbldoaXRlQ2FzdGxlUXVlZW5zaWRlKGZhbHNlKTtcbiAgICAgICAgfSBlbHNlIGlmIChtb3ZpbmdQaWVjZSA9PT0gJ2snKSB7XG4gICAgICAgICAgICBzZXRDYW5CbGFja0Nhc3RsZUtpbmdzaWRlKGZhbHNlKTtcbiAgICAgICAgICAgIHNldENhbkJsYWNrQ2FzdGxlUXVlZW5zaWRlKGZhbHNlKTtcbiAgICAgICAgfSBlbHNlIGlmIChtb3ZpbmdQaWVjZSA9PT0gJ1InKSB7XG4gICAgICAgICAgICBpZiAoc3RhcnRSb3cgPT09IDcgJiYgc3RhcnRDb2wgPT09IDApIHNldENhbldoaXRlQ2FzdGxlUXVlZW5zaWRlKGZhbHNlKTtcbiAgICAgICAgICAgIGlmIChzdGFydFJvdyA9PT0gNyAmJiBzdGFydENvbCA9PT0gNykgc2V0Q2FuV2hpdGVDYXN0bGVLaW5nc2lkZShmYWxzZSk7XG4gICAgICAgIH0gZWxzZSBpZiAobW92aW5nUGllY2UgPT09ICdyJykge1xuICAgICAgICAgICAgaWYgKHN0YXJ0Um93ID09PSAwICYmIHN0YXJ0Q29sID09PSAwKSBzZXRDYW5CbGFja0Nhc3RsZVF1ZWVuc2lkZShmYWxzZSk7XG4gICAgICAgICAgICBpZiAoc3RhcnRSb3cgPT09IDAgJiYgc3RhcnRDb2wgPT09IDcpIHNldENhbkJsYWNrQ2FzdGxlS2luZ3NpZGUoZmFsc2UpO1xuICAgICAgICB9XG5cbiAgICAgICAgc2V0Qm9hcmQobmV3Qm9hcmQpO1xuICAgICAgICBzZXRTZWxlY3RlZFBpZWNlKG51bGwpO1xuICAgICAgICBzZXRWYWxpZE1vdmVzKFtdKTtcbiAgICAgICAgc2V0Q3VycmVudFBsYXllcihjdXJyZW50UGxheWVyID09PSAnd2hpdGUnID8gJ2JsYWNrJyA6ICd3aGl0ZScpO1xuICAgIH07XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImdhbWUtY29udGFpbmVyXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJvYXJkXCI+XG4gICAgICAgICAgICAgICAge2JvYXJkLm1hcCgocm93LCByb3dJbmRleCkgPT4gKFxuICAgICAgICAgICAgICAgICAgICByb3cubWFwKChwaWVjZSwgY29sSW5kZXgpID0+IChcbiAgICAgICAgICAgICAgICAgICAgICAgIDxTcXVhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk9e2Ake3Jvd0luZGV4fS0ke2NvbEluZGV4fWB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGllY2U9e3BpZWNlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzU2VsZWN0ZWQ9e3NlbGVjdGVkUGllY2U/LlswXSA9PT0gcm93SW5kZXggJiYgc2VsZWN0ZWRQaWVjZT8uWzFdID09PSBjb2xJbmRleH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc1ZhbGlkTW92ZT17dmFsaWRNb3Zlcy5zb21lKChbciwgY10pID0+IHIgPT09IHJvd0luZGV4ICYmIGMgPT09IGNvbEluZGV4KX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBoYW5kbGVTcXVhcmVDbGljayhyb3dJbmRleCwgY29sSW5kZXgpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uRHJhZ1N0YXJ0PXsoZSkgPT4gaGFuZGxlRHJhZ1N0YXJ0KGUsIHJvd0luZGV4LCBjb2xJbmRleCl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25EcmFnT3Zlcj17aGFuZGxlRHJhZ092ZXJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25Ecm9wPXsoZSkgPT4gaGFuZGxlRHJvcChlLCByb3dJbmRleCwgY29sSW5kZXgpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzV2hpdGU9eyhyb3dJbmRleCArIGNvbEluZGV4KSAlIDIgPT09IDB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNHYW1lT3Zlcj17aXNHYW1lT3Zlcn1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICkpXG4gICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3RhdHVzXCI+XG4gICAgICAgICAgICAgICAge2dhbWVTdGF0dXN9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENoZXNzR2FtZTtcblxuIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJ1c2VDYWxsYmFjayIsIlNxdWFyZSIsImdldFZhbGlkTW92ZXMiLCJpc0NoZWNrIiwiaXNDaGVja21hdGUiLCJpbml0aWFsQm9hcmQiLCJDaGVzc0dhbWUiLCJib2FyZCIsInNldEJvYXJkIiwic2VsZWN0ZWRQaWVjZSIsInNldFNlbGVjdGVkUGllY2UiLCJjdXJyZW50UGxheWVyIiwic2V0Q3VycmVudFBsYXllciIsInZhbGlkTW92ZXMiLCJzZXRWYWxpZE1vdmVzIiwiZ2FtZVN0YXR1cyIsInNldEdhbWVTdGF0dXMiLCJpc0dhbWVPdmVyIiwic2V0SXNHYW1lT3ZlciIsImNhbldoaXRlQ2FzdGxlS2luZ3NpZGUiLCJzZXRDYW5XaGl0ZUNhc3RsZUtpbmdzaWRlIiwiY2FuV2hpdGVDYXN0bGVRdWVlbnNpZGUiLCJzZXRDYW5XaGl0ZUNhc3RsZVF1ZWVuc2lkZSIsImNhbkJsYWNrQ2FzdGxlS2luZ3NpZGUiLCJzZXRDYW5CbGFja0Nhc3RsZUtpbmdzaWRlIiwiY2FuQmxhY2tDYXN0bGVRdWVlbnNpZGUiLCJzZXRDYW5CbGFja0Nhc3RsZVF1ZWVuc2lkZSIsInVwZGF0ZUdhbWVTdGF0dXMiLCJpc1doaXRlS2luZyIsImNoYXJBdCIsInRvVXBwZXJDYXNlIiwic2xpY2UiLCJoYW5kbGVTcXVhcmVDbGljayIsInJvdyIsImNvbCIsInNvbWUiLCJyIiwiYyIsIm1vdmVQaWVjZSIsInBpZWNlIiwidG9Mb3dlckNhc2UiLCJoYW5kbGVEcmFnU3RhcnQiLCJlIiwiZGF0YVRyYW5zZmVyIiwic2V0RGF0YSIsInByZXZlbnREZWZhdWx0IiwiaGFuZGxlRHJhZ092ZXIiLCJoYW5kbGVEcm9wIiwiZHJvcFJvdyIsImRyb3BDb2wiLCJzdGFydFJvdyIsInN0YXJ0Q29sIiwiZ2V0RGF0YSIsInNwbGl0IiwibWFwIiwiTnVtYmVyIiwiZW5kUm93IiwiZW5kQ29sIiwibmV3Qm9hcmQiLCJtb3ZpbmdQaWVjZSIsIk1hdGgiLCJhYnMiLCJkaXYiLCJjbGFzc05hbWUiLCJyb3dJbmRleCIsImNvbEluZGV4IiwiaXNTZWxlY3RlZCIsImlzVmFsaWRNb3ZlIiwib25DbGljayIsIm9uRHJhZ1N0YXJ0Iiwib25EcmFnT3ZlciIsIm9uRHJvcCIsImlzV2hpdGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./ChessGame.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./Square.tsx":
/*!********************!*\
  !*** ./Square.tsx ***!
  \********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Square: function() { return /* binding */ Square; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _pieceImages__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pieceImages */ \"(app-pages-browser)/./pieceImages.ts\");\n\n\n\nconst Square = (param)=>{\n    let { piece, isSelected, isValidMove, onClick, onDragStart, onDragOver, onDrop, isWhite, isGameOver } = param;\n    const pieceImage = piece ? _pieceImages__WEBPACK_IMPORTED_MODULE_2__[\"default\"][piece] || \"\" : \"\";\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"square \".concat(isWhite ? \"white\" : \"black\", \" \").concat(isSelected ? \"selected\" : \"\", \" \").concat(isValidMove ? \"valid-move\" : \"\", \" \").concat(isGameOver ? \"game-over\" : \"\"),\n        onClick: onClick,\n        onDragStart: onDragStart,\n        onDragOver: onDragOver,\n        onDrop: onDrop,\n        draggable: !!piece,\n        children: pieceImage && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n            src: pieceImage,\n            alt: piece,\n            className: \"piece\",\n            draggable: \"false\"\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\Bharrath Kumar\\\\chess\\\\Square.tsx\",\n            lineNumber: 37,\n            columnNumber: 28\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\Bharrath Kumar\\\\chess\\\\Square.tsx\",\n        lineNumber: 29,\n        columnNumber: 9\n    }, undefined);\n};\n_c = Square;\nvar _c;\n$RefreshReg$(_c, \"Square\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL1NxdWFyZS50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTBCO0FBQ2M7QUFjakMsTUFBTUUsU0FBZ0M7UUFBQyxFQUMxQ0MsS0FBSyxFQUNMQyxVQUFVLEVBQ1ZDLFdBQVcsRUFDWEMsT0FBTyxFQUNQQyxXQUFXLEVBQ1hDLFVBQVUsRUFDVkMsTUFBTSxFQUNOQyxPQUFPLEVBQ1BDLFVBQVUsRUFDYjtJQUNHLE1BQU1DLGFBQWFULFFBQVFGLG9EQUFXLENBQUNFLE1BQU0sSUFBSSxLQUFLO0lBQ3RELHFCQUNJLDhEQUFDVTtRQUNHQyxXQUFXLFVBQXlDVixPQUEvQk0sVUFBVSxVQUFVLFNBQVEsS0FBbUNMLE9BQWhDRCxhQUFhLGFBQWEsSUFBRyxLQUFzQ08sT0FBbkNOLGNBQWMsZUFBZSxJQUFHLEtBQWlDLE9BQTlCTSxhQUFhLGNBQWM7UUFDbEpMLFNBQVNBO1FBQ1RDLGFBQWFBO1FBQ2JDLFlBQVlBO1FBQ1pDLFFBQVFBO1FBQ1JNLFdBQVcsQ0FBQyxDQUFDWjtrQkFFWlMsNEJBQWMsOERBQUNJO1lBQUlDLEtBQUtMO1lBQVlNLEtBQUtmO1lBQU9XLFdBQVU7WUFBUUMsV0FBVTs7Ozs7Ozs7Ozs7QUFHekYsRUFBRTtLQXhCV2IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vU3F1YXJlLnRzeD85NWFjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgcGllY2VJbWFnZXMgZnJvbSAnLi9waWVjZUltYWdlcyc7XG5cbmludGVyZmFjZSBTcXVhcmVQcm9wcyB7XG4gICAgcGllY2U6IHN0cmluZztcbiAgICBpc1NlbGVjdGVkOiBib29sZWFuO1xuICAgIGlzVmFsaWRNb3ZlOiBib29sZWFuO1xuICAgIG9uQ2xpY2s6ICgpID0+IHZvaWQ7XG4gICAgb25EcmFnU3RhcnQ6IChlOiBSZWFjdC5EcmFnRXZlbnQ8SFRNTERpdkVsZW1lbnQ+KSA9PiB2b2lkO1xuICAgIG9uRHJhZ092ZXI6IChlOiBSZWFjdC5EcmFnRXZlbnQ8SFRNTERpdkVsZW1lbnQ+KSA9PiB2b2lkO1xuICAgIG9uRHJvcDogKGU6IFJlYWN0LkRyYWdFdmVudDxIVE1MRGl2RWxlbWVudD4pID0+IHZvaWQ7XG4gICAgaXNXaGl0ZTogYm9vbGVhbjtcbiAgICBpc0dhbWVPdmVyOiBib29sZWFuO1xufVxuXG5leHBvcnQgY29uc3QgU3F1YXJlOiBSZWFjdC5GQzxTcXVhcmVQcm9wcz4gPSAoeyBcbiAgICBwaWVjZSwgXG4gICAgaXNTZWxlY3RlZCwgXG4gICAgaXNWYWxpZE1vdmUsIFxuICAgIG9uQ2xpY2ssIFxuICAgIG9uRHJhZ1N0YXJ0LFxuICAgIG9uRHJhZ092ZXIsXG4gICAgb25Ecm9wLFxuICAgIGlzV2hpdGUsIFxuICAgIGlzR2FtZU92ZXIgXG59KSA9PiB7XG4gICAgY29uc3QgcGllY2VJbWFnZSA9IHBpZWNlID8gcGllY2VJbWFnZXNbcGllY2VdIHx8ICcnIDogJyc7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBcbiAgICAgICAgICAgIGNsYXNzTmFtZT17YHNxdWFyZSAke2lzV2hpdGUgPyAnd2hpdGUnIDogJ2JsYWNrJ30gJHtpc1NlbGVjdGVkID8gJ3NlbGVjdGVkJyA6ICcnfSAke2lzVmFsaWRNb3ZlID8gJ3ZhbGlkLW1vdmUnIDogJyd9ICR7aXNHYW1lT3ZlciA/ICdnYW1lLW92ZXInIDogJyd9YH1cbiAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICAgICAgICBvbkRyYWdTdGFydD17b25EcmFnU3RhcnR9XG4gICAgICAgICAgICBvbkRyYWdPdmVyPXtvbkRyYWdPdmVyfVxuICAgICAgICAgICAgb25Ecm9wPXtvbkRyb3B9XG4gICAgICAgICAgICBkcmFnZ2FibGU9eyEhcGllY2V9XG4gICAgICAgID5cbiAgICAgICAgICAgIHtwaWVjZUltYWdlICYmIDxpbWcgc3JjPXtwaWVjZUltYWdlfSBhbHQ9e3BpZWNlfSBjbGFzc05hbWU9XCJwaWVjZVwiIGRyYWdnYWJsZT1cImZhbHNlXCIgLz59XG4gICAgICAgIDwvZGl2PlxuICAgICk7XG59O1xuXG4iXSwibmFtZXMiOlsiUmVhY3QiLCJwaWVjZUltYWdlcyIsIlNxdWFyZSIsInBpZWNlIiwiaXNTZWxlY3RlZCIsImlzVmFsaWRNb3ZlIiwib25DbGljayIsIm9uRHJhZ1N0YXJ0Iiwib25EcmFnT3ZlciIsIm9uRHJvcCIsImlzV2hpdGUiLCJpc0dhbWVPdmVyIiwicGllY2VJbWFnZSIsImRpdiIsImNsYXNzTmFtZSIsImRyYWdnYWJsZSIsImltZyIsInNyYyIsImFsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./Square.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/page.tsx":
/*!**********************!*\
  !*** ./app/page.tsx ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ SyntheticV0PageForDeployment; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _ChessGame__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ChessGame */ \"(app-pages-browser)/./ChessGame.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\nfunction SyntheticV0PageForDeployment() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ChessGame__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {}, void 0, false, {\n        fileName: \"C:\\\\Users\\\\Bharrath Kumar\\\\chess\\\\app\\\\page.tsx\",\n        lineNumber: 6,\n        columnNumber: 10\n    }, this);\n}\n_c = SyntheticV0PageForDeployment;\nvar _c;\n$RefreshReg$(_c, \"SyntheticV0PageForDeployment\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9wYWdlLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRW9DO0FBRXJCLFNBQVNDO0lBQ3RCLHFCQUFPLDhEQUFDRCxrREFBU0E7Ozs7O0FBQ25CO0tBRndCQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9hcHAvcGFnZS50c3g/NzYwMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIlxuXG5pbXBvcnQgQ2hlc3NHYW1lIGZyb20gXCIuLi9DaGVzc0dhbWVcIlxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBTeW50aGV0aWNWMFBhZ2VGb3JEZXBsb3ltZW50KCkge1xuICByZXR1cm4gPENoZXNzR2FtZSAvPlxufSJdLCJuYW1lcyI6WyJDaGVzc0dhbWUiLCJTeW50aGV0aWNWMFBhZ2VGb3JEZXBsb3ltZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./chessLogic.ts":
/*!***********************!*\
  !*** ./chessLogic.ts ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getValidMoves: function() { return /* binding */ getValidMoves; },\n/* harmony export */   isCheck: function() { return /* binding */ isCheck; },\n/* harmony export */   isCheckmate: function() { return /* binding */ isCheckmate; }\n/* harmony export */ });\nfunction getValidMoves(board, row, col) {\n    let considerPin = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : true, canCastleKingside = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : false, canCastleQueenside = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : false;\n    const piece = board[row][col];\n    const isWhite = piece === piece.toUpperCase();\n    let moves = [];\n    switch(piece.toLowerCase()){\n        case \"p\":\n            moves = getPawnMoves(board, row, col, isWhite);\n            break;\n        case \"r\":\n            moves = getRookMoves(board, row, col, isWhite);\n            break;\n        case \"n\":\n            moves = getKnightMoves(board, row, col, isWhite);\n            break;\n        case \"b\":\n            moves = getBishopMoves(board, row, col, isWhite);\n            break;\n        case \"q\":\n            moves = getQueenMoves(board, row, col, isWhite);\n            break;\n        case \"k\":\n            moves = getKingMoves(board, row, col, isWhite, canCastleKingside, canCastleQueenside);\n            break;\n    }\n    if (considerPin) {\n        moves = moves.filter((param)=>{\n            let [newRow, newCol] = param;\n            return !movePutsOwnKingInCheck(board, row, col, newRow, newCol, isWhite);\n        });\n    }\n    return moves;\n}\nfunction getPawnMoves(board, row, col, isWhite) {\n    var _board_;\n    const moves = [];\n    const direction = isWhite ? -1 : 1;\n    const startRow = isWhite ? 6 : 1;\n    if (((_board_ = board[row + direction]) === null || _board_ === void 0 ? void 0 : _board_[col]) === \"\") {\n        var _board_1;\n        moves.push([\n            row + direction,\n            col\n        ]);\n        if (row === startRow && ((_board_1 = board[row + 2 * direction]) === null || _board_1 === void 0 ? void 0 : _board_1[col]) === \"\") {\n            moves.push([\n                row + 2 * direction,\n                col\n            ]);\n        }\n    }\n    for (const dcol of [\n        -1,\n        1\n    ]){\n        var _board_2;\n        if (((_board_2 = board[row + direction]) === null || _board_2 === void 0 ? void 0 : _board_2[col + dcol]) && isOpponentPiece(board[row + direction][col + dcol], isWhite)) {\n            moves.push([\n                row + direction,\n                col + dcol\n            ]);\n        }\n    }\n    return moves;\n}\nfunction getRookMoves(board, row, col, isWhite) {\n    return getStraightMoves(board, row, col, isWhite);\n}\nfunction getKnightMoves(board, row, col, isWhite) {\n    const moves = [];\n    const knightMoves = [\n        [\n            -2,\n            -1\n        ],\n        [\n            -2,\n            1\n        ],\n        [\n            -1,\n            -2\n        ],\n        [\n            -1,\n            2\n        ],\n        [\n            1,\n            -2\n        ],\n        [\n            1,\n            2\n        ],\n        [\n            2,\n            -1\n        ],\n        [\n            2,\n            1\n        ]\n    ];\n    for (const [dr, dc] of knightMoves){\n        const newRow = row + dr;\n        const newCol = col + dc;\n        if (isValidPosition(newRow, newCol) && (board[newRow][newCol] === \"\" || isOpponentPiece(board[newRow][newCol], isWhite))) {\n            moves.push([\n                newRow,\n                newCol\n            ]);\n        }\n    }\n    return moves;\n}\nfunction getBishopMoves(board, row, col, isWhite) {\n    return getDiagonalMoves(board, row, col, isWhite);\n}\nfunction getQueenMoves(board, row, col, isWhite) {\n    return [\n        ...getStraightMoves(board, row, col, isWhite),\n        ...getDiagonalMoves(board, row, col, isWhite)\n    ];\n}\nfunction getKingMoves(board, row, col, isWhite, canCastleKingside, canCastleQueenside) {\n    const moves = [];\n    const kingMoves = [\n        [\n            -1,\n            -1\n        ],\n        [\n            -1,\n            0\n        ],\n        [\n            -1,\n            1\n        ],\n        [\n            0,\n            -1\n        ],\n        [\n            0,\n            1\n        ],\n        [\n            1,\n            -1\n        ],\n        [\n            1,\n            0\n        ],\n        [\n            1,\n            1\n        ]\n    ];\n    for (const [dr, dc] of kingMoves){\n        const newRow = row + dr;\n        const newCol = col + dc;\n        if (isValidPosition(newRow, newCol) && (board[newRow][newCol] === \"\" || isOpponentPiece(board[newRow][newCol], isWhite))) {\n            moves.push([\n                newRow,\n                newCol\n            ]);\n        }\n    }\n    moves.push(...getCastlingMoves(board, row, col, isWhite, canCastleKingside, canCastleQueenside));\n    return moves;\n}\nfunction getCastlingMoves(board, row, col, isWhite, canCastleKingside, canCastleQueenside) {\n    const castlingMoves = [];\n    if (isCheck(board, isWhite)) return castlingMoves;\n    const backRank = isWhite ? 7 : 0;\n    if (canCastleKingside && board[backRank][5] === \"\" && board[backRank][6] === \"\") {\n        if (!isSquareUnderAttack(board, backRank, 4, isWhite) && !isSquareUnderAttack(board, backRank, 5, isWhite) && !isSquareUnderAttack(board, backRank, 6, isWhite)) {\n            castlingMoves.push([\n                backRank,\n                6\n            ]);\n        }\n    }\n    if (canCastleQueenside && board[backRank][1] === \"\" && board[backRank][2] === \"\" && board[backRank][3] === \"\") {\n        if (!isSquareUnderAttack(board, backRank, 4, isWhite) && !isSquareUnderAttack(board, backRank, 3, isWhite) && !isSquareUnderAttack(board, backRank, 2, isWhite)) {\n            castlingMoves.push([\n                backRank,\n                2\n            ]);\n        }\n    }\n    return castlingMoves;\n}\nfunction isSquareUnderAttack(board, row, col, isWhite) {\n    const opponentColor = isWhite ? \"b\" : \"w\";\n    const directions = [\n        [\n            -1,\n            -1\n        ],\n        [\n            -1,\n            0\n        ],\n        [\n            -1,\n            1\n        ],\n        [\n            0,\n            -1\n        ],\n        [\n            0,\n            1\n        ],\n        [\n            1,\n            -1\n        ],\n        [\n            1,\n            0\n        ],\n        [\n            1,\n            1\n        ]\n    ];\n    // Check for pawn attacks\n    const pawnDirection = isWhite ? 1 : -1;\n    if (isValidPosition(row + pawnDirection, col - 1) && board[row + pawnDirection][col - 1].toLowerCase() === \"p\" && isOpponentPiece(board[row + pawnDirection][col - 1], isWhite)) return true;\n    if (isValidPosition(row + pawnDirection, col + 1) && board[row + pawnDirection][col + 1].toLowerCase() === \"p\" && isOpponentPiece(board[row + pawnDirection][col + 1], isWhite)) return true;\n    // Check for knight attacks\n    const knightMoves = [\n        [\n            -2,\n            -1\n        ],\n        [\n            -2,\n            1\n        ],\n        [\n            -1,\n            -2\n        ],\n        [\n            -1,\n            2\n        ],\n        [\n            1,\n            -2\n        ],\n        [\n            1,\n            2\n        ],\n        [\n            2,\n            -1\n        ],\n        [\n            2,\n            1\n        ]\n    ];\n    for (const [dr, dc] of knightMoves){\n        const newRow = row + dr;\n        const newCol = col + dc;\n        if (isValidPosition(newRow, newCol) && board[newRow][newCol].toLowerCase() === \"n\" && isOpponentPiece(board[newRow][newCol], isWhite)) return true;\n    }\n    // Check for attacks from other pieces (rook, bishop, queen, king)\n    for (const [dr, dc] of directions){\n        let newRow = row + dr;\n        let newCol = col + dc;\n        let distance = 1;\n        while(isValidPosition(newRow, newCol)){\n            const piece = board[newRow][newCol].toLowerCase();\n            if (piece !== \"\") {\n                if (isOpponentPiece(board[newRow][newCol], isWhite)) {\n                    if (piece === \"q\" || piece === \"r\" && (dr === 0 || dc === 0) || piece === \"b\" && dr !== 0 && dc !== 0 || piece === \"k\" && distance === 1) {\n                        return true;\n                    }\n                }\n                break;\n            }\n            newRow += dr;\n            newCol += dc;\n            distance++;\n        }\n    }\n    return false;\n}\nfunction getStraightMoves(board, row, col, isWhite) {\n    const moves = [];\n    const directions = [\n        [\n            -1,\n            0\n        ],\n        [\n            1,\n            0\n        ],\n        [\n            0,\n            -1\n        ],\n        [\n            0,\n            1\n        ]\n    ];\n    for (const [dr, dc] of directions){\n        let newRow = row + dr;\n        let newCol = col + dc;\n        while(isValidPosition(newRow, newCol)){\n            if (board[newRow][newCol] === \"\") {\n                moves.push([\n                    newRow,\n                    newCol\n                ]);\n            } else if (isOpponentPiece(board[newRow][newCol], isWhite)) {\n                moves.push([\n                    newRow,\n                    newCol\n                ]);\n                break;\n            } else {\n                break;\n            }\n            newRow += dr;\n            newCol += dc;\n        }\n    }\n    return moves;\n}\nfunction getDiagonalMoves(board, row, col, isWhite) {\n    const moves = [];\n    const directions = [\n        [\n            -1,\n            -1\n        ],\n        [\n            -1,\n            1\n        ],\n        [\n            1,\n            -1\n        ],\n        [\n            1,\n            1\n        ]\n    ];\n    for (const [dr, dc] of directions){\n        let newRow = row + dr;\n        let newCol = col + dc;\n        while(isValidPosition(newRow, newCol)){\n            if (board[newRow][newCol] === \"\") {\n                moves.push([\n                    newRow,\n                    newCol\n                ]);\n            } else if (isOpponentPiece(board[newRow][newCol], isWhite)) {\n                moves.push([\n                    newRow,\n                    newCol\n                ]);\n                break;\n            } else {\n                break;\n            }\n            newRow += dr;\n            newCol += dc;\n        }\n    }\n    return moves;\n}\nfunction isValidPosition(row, col) {\n    return row >= 0 && row < 8 && col >= 0 && col < 8;\n}\nfunction isOpponentPiece(piece, isWhite) {\n    return piece !== \"\" && (isWhite ? piece === piece.toLowerCase() : piece === piece.toUpperCase());\n}\nfunction isCheck(board, isWhiteKing) {\n    const kingPiece = isWhiteKing ? \"K\" : \"k\";\n    for(let row = 0; row < 8; row++){\n        for(let col = 0; col < 8; col++){\n            if (board[row][col] === kingPiece) {\n                return isSquareUnderAttack(board, row, col, isWhiteKing);\n            }\n        }\n    }\n    return false; // This should never happen in a valid chess position\n}\nfunction isCheckmate(board, isWhiteKing) {\n    if (!isCheck(board, isWhiteKing)) return false;\n    for(let row = 0; row < 8; row++){\n        for(let col = 0; col < 8; col++){\n            const piece = board[row][col];\n            if (piece !== \"\" && (isWhiteKing ? piece === piece.toUpperCase() : piece === piece.toLowerCase())) {\n                const moves = getValidMoves(board, row, col, true, false, false);\n                if (moves.length > 0) {\n                    return false;\n                }\n            }\n        }\n    }\n    return true;\n}\nfunction movePutsOwnKingInCheck(board, fromRow, fromCol, toRow, toCol, isWhite) {\n    const newBoard = board.map((row)=>[\n            ...row\n        ]);\n    newBoard[toRow][toCol] = newBoard[fromRow][fromCol];\n    newBoard[fromRow][fromCol] = \"\";\n    return isCheck(newBoard, isWhite);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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InNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jaGVzc0xvZ2ljLnRzPzIwNjciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHR5cGUgUGllY2UgPSAncCcgfCAncicgfCAnbicgfCAnYicgfCAncScgfCAnaycgfCAnUCcgfCAnUicgfCAnTicgfCAnQicgfCAnUScgfCAnSycgfCAnJztcbmV4cG9ydCB0eXBlIEJvYXJkID0gUGllY2VbXVtdO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0VmFsaWRNb3ZlcyhcbiAgICBib2FyZDogQm9hcmQsXG4gICAgcm93OiBudW1iZXIsXG4gICAgY29sOiBudW1iZXIsXG4gICAgY29uc2lkZXJQaW46IGJvb2xlYW4gPSB0cnVlLFxuICAgIGNhbkNhc3RsZUtpbmdzaWRlOiBib29sZWFuID0gZmFsc2UsXG4gICAgY2FuQ2FzdGxlUXVlZW5zaWRlOiBib29sZWFuID0gZmFsc2Vcbik6IFtudW1iZXIsIG51bWJlcl1bXSB7XG4gICAgY29uc3QgcGllY2UgPSBib2FyZFtyb3ddW2NvbF07XG4gICAgY29uc3QgaXNXaGl0ZSA9IHBpZWNlID09PSBwaWVjZS50b1VwcGVyQ2FzZSgpO1xuICAgIGxldCBtb3ZlczogW251bWJlciwgbnVtYmVyXVtdID0gW107XG5cbiAgICBzd2l0Y2ggKHBpZWNlLnRvTG93ZXJDYXNlKCkpIHtcbiAgICAgICAgY2FzZSAncCc6IG1vdmVzID0gZ2V0UGF3bk1vdmVzKGJvYXJkLCByb3csIGNvbCwgaXNXaGl0ZSk7IGJyZWFrO1xuICAgICAgICBjYXNlICdyJzogbW92ZXMgPSBnZXRSb29rTW92ZXMoYm9hcmQsIHJvdywgY29sLCBpc1doaXRlKTsgYnJlYWs7XG4gICAgICAgIGNhc2UgJ24nOiBtb3ZlcyA9IGdldEtuaWdodE1vdmVzKGJvYXJkLCByb3csIGNvbCwgaXNXaGl0ZSk7IGJyZWFrO1xuICAgICAgICBjYXNlICdiJzogbW92ZXMgPSBnZXRCaXNob3BNb3Zlcyhib2FyZCwgcm93LCBjb2wsIGlzV2hpdGUpOyBicmVhaztcbiAgICAgICAgY2FzZSAncSc6IG1vdmVzID0gZ2V0UXVlZW5Nb3Zlcyhib2FyZCwgcm93LCBjb2wsIGlzV2hpdGUpOyBicmVhaztcbiAgICAgICAgY2FzZSAnayc6IG1vdmVzID0gZ2V0S2luZ01vdmVzKGJvYXJkLCByb3csIGNvbCwgaXNXaGl0ZSwgY2FuQ2FzdGxlS2luZ3NpZGUsIGNhbkNhc3RsZVF1ZWVuc2lkZSk7IGJyZWFrO1xuICAgIH1cblxuICAgIGlmIChjb25zaWRlclBpbikge1xuICAgICAgICBtb3ZlcyA9IG1vdmVzLmZpbHRlcigoW25ld1JvdywgbmV3Q29sXSkgPT4gIW1vdmVQdXRzT3duS2luZ0luQ2hlY2soYm9hcmQsIHJvdywgY29sLCBuZXdSb3csIG5ld0NvbCwgaXNXaGl0ZSkpO1xuICAgIH1cblxuICAgIHJldHVybiBtb3Zlcztcbn1cblxuZnVuY3Rpb24gZ2V0UGF3bk1vdmVzKGJvYXJkOiBCb2FyZCwgcm93OiBudW1iZXIsIGNvbDogbnVtYmVyLCBpc1doaXRlOiBib29sZWFuKTogW251bWJlciwgbnVtYmVyXVtdIHtcbiAgICBjb25zdCBtb3ZlczogW251bWJlciwgbnVtYmVyXVtdID0gW107XG4gICAgY29uc3QgZGlyZWN0aW9uID0gaXNXaGl0ZSA/IC0xIDogMTtcbiAgICBjb25zdCBzdGFydFJvdyA9IGlzV2hpdGUgPyA2IDogMTtcblxuICAgIGlmIChib2FyZFtyb3cgKyBkaXJlY3Rpb25dPy5bY29sXSA9PT0gJycpIHtcbiAgICAgICAgbW92ZXMucHVzaChbcm93ICsgZGlyZWN0aW9uLCBjb2xdKTtcbiAgICAgICAgaWYgKHJvdyA9PT0gc3RhcnRSb3cgJiYgYm9hcmRbcm93ICsgMiAqIGRpcmVjdGlvbl0/Lltjb2xdID09PSAnJykge1xuICAgICAgICAgICAgbW92ZXMucHVzaChbcm93ICsgMiAqIGRpcmVjdGlvbiwgY29sXSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKGNvbnN0IGRjb2wgb2YgWy0xLCAxXSkge1xuICAgICAgICBpZiAoYm9hcmRbcm93ICsgZGlyZWN0aW9uXT8uW2NvbCArIGRjb2xdICYmIGlzT3Bwb25lbnRQaWVjZShib2FyZFtyb3cgKyBkaXJlY3Rpb25dW2NvbCArIGRjb2xdLCBpc1doaXRlKSkge1xuICAgICAgICAgICAgbW92ZXMucHVzaChbcm93ICsgZGlyZWN0aW9uLCBjb2wgKyBkY29sXSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbW92ZXM7XG59XG5cbmZ1bmN0aW9uIGdldFJvb2tNb3Zlcyhib2FyZDogQm9hcmQsIHJvdzogbnVtYmVyLCBjb2w6IG51bWJlciwgaXNXaGl0ZTogYm9vbGVhbik6IFtudW1iZXIsIG51bWJlcl1bXSB7XG4gICAgcmV0dXJuIGdldFN0cmFpZ2h0TW92ZXMoYm9hcmQsIHJvdywgY29sLCBpc1doaXRlKTtcbn1cblxuZnVuY3Rpb24gZ2V0S25pZ2h0TW92ZXMoYm9hcmQ6IEJvYXJkLCByb3c6IG51bWJlciwgY29sOiBudW1iZXIsIGlzV2hpdGU6IGJvb2xlYW4pOiBbbnVtYmVyLCBudW1iZXJdW10ge1xuICAgIGNvbnN0IG1vdmVzOiBbbnVtYmVyLCBudW1iZXJdW10gPSBbXTtcbiAgICBjb25zdCBrbmlnaHRNb3ZlcyA9IFtbLTIsIC0xXSwgWy0yLCAxXSwgWy0xLCAtMl0sIFstMSwgMl0sIFsxLCAtMl0sIFsxLCAyXSwgWzIsIC0xXSwgWzIsIDFdXTtcblxuICAgIGZvciAoY29uc3QgW2RyLCBkY10gb2Yga25pZ2h0TW92ZXMpIHtcbiAgICAgICAgY29uc3QgbmV3Um93ID0gcm93ICsgZHI7XG4gICAgICAgIGNvbnN0IG5ld0NvbCA9IGNvbCArIGRjO1xuICAgICAgICBpZiAoaXNWYWxpZFBvc2l0aW9uKG5ld1JvdywgbmV3Q29sKSAmJiAoYm9hcmRbbmV3Um93XVtuZXdDb2xdID09PSAnJyB8fCBpc09wcG9uZW50UGllY2UoYm9hcmRbbmV3Um93XVtuZXdDb2xdLCBpc1doaXRlKSkpIHtcbiAgICAgICAgICAgIG1vdmVzLnB1c2goW25ld1JvdywgbmV3Q29sXSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbW92ZXM7XG59XG5cbmZ1bmN0aW9uIGdldEJpc2hvcE1vdmVzKGJvYXJkOiBCb2FyZCwgcm93OiBudW1iZXIsIGNvbDogbnVtYmVyLCBpc1doaXRlOiBib29sZWFuKTogW251bWJlciwgbnVtYmVyXVtdIHtcbiAgICByZXR1cm4gZ2V0RGlhZ29uYWxNb3Zlcyhib2FyZCwgcm93LCBjb2wsIGlzV2hpdGUpO1xufVxuXG5mdW5jdGlvbiBnZXRRdWVlbk1vdmVzKGJvYXJkOiBCb2FyZCwgcm93OiBudW1iZXIsIGNvbDogbnVtYmVyLCBpc1doaXRlOiBib29sZWFuKTogW251bWJlciwgbnVtYmVyXVtdIHtcbiAgICByZXR1cm4gWy4uLmdldFN0cmFpZ2h0TW92ZXMoYm9hcmQsIHJvdywgY29sLCBpc1doaXRlKSwgLi4uZ2V0RGlhZ29uYWxNb3Zlcyhib2FyZCwgcm93LCBjb2wsIGlzV2hpdGUpXTtcbn1cblxuZnVuY3Rpb24gZ2V0S2luZ01vdmVzKGJvYXJkOiBCb2FyZCwgcm93OiBudW1iZXIsIGNvbDogbnVtYmVyLCBpc1doaXRlOiBib29sZWFuLCBjYW5DYXN0bGVLaW5nc2lkZTogYm9vbGVhbiwgY2FuQ2FzdGxlUXVlZW5zaWRlOiBib29sZWFuKTogW251bWJlciwgbnVtYmVyXVtdIHtcbiAgICBjb25zdCBtb3ZlczogW251bWJlciwgbnVtYmVyXVtdID0gW107XG4gICAgY29uc3Qga2luZ01vdmVzID0gW1stMSwgLTFdLCBbLTEsIDBdLCBbLTEsIDFdLCBbMCwgLTFdLCBbMCwgMV0sIFsxLCAtMV0sIFsxLCAwXSwgWzEsIDFdXTtcblxuICAgIGZvciAoY29uc3QgW2RyLCBkY10gb2Yga2luZ01vdmVzKSB7XG4gICAgICAgIGNvbnN0IG5ld1JvdyA9IHJvdyArIGRyO1xuICAgICAgICBjb25zdCBuZXdDb2wgPSBjb2wgKyBkYztcbiAgICAgICAgaWYgKGlzVmFsaWRQb3NpdGlvbihuZXdSb3csIG5ld0NvbCkgJiYgKGJvYXJkW25ld1Jvd11bbmV3Q29sXSA9PT0gJycgfHwgaXNPcHBvbmVudFBpZWNlKGJvYXJkW25ld1Jvd11bbmV3Q29sXSwgaXNXaGl0ZSkpKSB7XG4gICAgICAgICAgICBtb3Zlcy5wdXNoKFtuZXdSb3csIG5ld0NvbF0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgbW92ZXMucHVzaCguLi5nZXRDYXN0bGluZ01vdmVzKGJvYXJkLCByb3csIGNvbCwgaXNXaGl0ZSwgY2FuQ2FzdGxlS2luZ3NpZGUsIGNhbkNhc3RsZVF1ZWVuc2lkZSkpO1xuXG4gICAgcmV0dXJuIG1vdmVzO1xufVxuXG5mdW5jdGlvbiBnZXRDYXN0bGluZ01vdmVzKGJvYXJkOiBCb2FyZCwgcm93OiBudW1iZXIsIGNvbDogbnVtYmVyLCBpc1doaXRlOiBib29sZWFuLCBjYW5DYXN0bGVLaW5nc2lkZTogYm9vbGVhbiwgY2FuQ2FzdGxlUXVlZW5zaWRlOiBib29sZWFuKTogW251bWJlciwgbnVtYmVyXVtdIHtcbiAgICBjb25zdCBjYXN0bGluZ01vdmVzOiBbbnVtYmVyLCBudW1iZXJdW10gPSBbXTtcbiAgICBcbiAgICBpZiAoaXNDaGVjayhib2FyZCwgaXNXaGl0ZSkpIHJldHVybiBjYXN0bGluZ01vdmVzO1xuXG4gICAgY29uc3QgYmFja1JhbmsgPSBpc1doaXRlID8gNyA6IDA7XG4gICAgXG4gICAgaWYgKGNhbkNhc3RsZUtpbmdzaWRlICYmIGJvYXJkW2JhY2tSYW5rXVs1XSA9PT0gJycgJiYgYm9hcmRbYmFja1JhbmtdWzZdID09PSAnJykge1xuICAgICAgICBpZiAoIWlzU3F1YXJlVW5kZXJBdHRhY2soYm9hcmQsIGJhY2tSYW5rLCA0LCBpc1doaXRlKSAmJlxuICAgICAgICAgICAgIWlzU3F1YXJlVW5kZXJBdHRhY2soYm9hcmQsIGJhY2tSYW5rLCA1LCBpc1doaXRlKSAmJlxuICAgICAgICAgICAgIWlzU3F1YXJlVW5kZXJBdHRhY2soYm9hcmQsIGJhY2tSYW5rLCA2LCBpc1doaXRlKSkge1xuICAgICAgICAgICAgY2FzdGxpbmdNb3Zlcy5wdXNoKFtiYWNrUmFuaywgNl0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIGlmIChjYW5DYXN0bGVRdWVlbnNpZGUgJiYgYm9hcmRbYmFja1JhbmtdWzFdID09PSAnJyAmJiBib2FyZFtiYWNrUmFua11bMl0gPT09ICcnICYmIGJvYXJkW2JhY2tSYW5rXVszXSA9PT0gJycpIHtcbiAgICAgICAgaWYgKCFpc1NxdWFyZVVuZGVyQXR0YWNrKGJvYXJkLCBiYWNrUmFuaywgNCwgaXNXaGl0ZSkgJiZcbiAgICAgICAgICAgICFpc1NxdWFyZVVuZGVyQXR0YWNrKGJvYXJkLCBiYWNrUmFuaywgMywgaXNXaGl0ZSkgJiZcbiAgICAgICAgICAgICFpc1NxdWFyZVVuZGVyQXR0YWNrKGJvYXJkLCBiYWNrUmFuaywgMiwgaXNXaGl0ZSkpIHtcbiAgICAgICAgICAgIGNhc3RsaW5nTW92ZXMucHVzaChbYmFja1JhbmssIDJdKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICByZXR1cm4gY2FzdGxpbmdNb3Zlcztcbn1cblxuZnVuY3Rpb24gaXNTcXVhcmVVbmRlckF0dGFjayhib2FyZDogQm9hcmQsIHJvdzogbnVtYmVyLCBjb2w6IG51bWJlciwgaXNXaGl0ZTogYm9vbGVhbik6IGJvb2xlYW4ge1xuICAgIGNvbnN0IG9wcG9uZW50Q29sb3IgPSBpc1doaXRlID8gJ2InIDogJ3cnO1xuICAgIGNvbnN0IGRpcmVjdGlvbnMgPSBbXG4gICAgICAgIFstMSwgLTFdLCBbLTEsIDBdLCBbLTEsIDFdLFxuICAgICAgICBbMCwgLTFdLCAgICAgICAgICAgWzAsIDFdLFxuICAgICAgICBbMSwgLTFdLCAgWzEsIDBdLCAgWzEsIDFdXG4gICAgXTtcbiAgICBcbiAgICAvLyBDaGVjayBmb3IgcGF3biBhdHRhY2tzXG4gICAgY29uc3QgcGF3bkRpcmVjdGlvbiA9IGlzV2hpdGUgPyAxIDogLTE7XG4gICAgaWYgKGlzVmFsaWRQb3NpdGlvbihyb3cgKyBwYXduRGlyZWN0aW9uLCBjb2wgLSAxKSAmJiBib2FyZFtyb3cgKyBwYXduRGlyZWN0aW9uXVtjb2wgLSAxXS50b0xvd2VyQ2FzZSgpID09PSAncCcgJiYgaXNPcHBvbmVudFBpZWNlKGJvYXJkW3JvdyArIHBhd25EaXJlY3Rpb25dW2NvbCAtIDFdLCBpc1doaXRlKSkgcmV0dXJuIHRydWU7XG4gICAgaWYgKGlzVmFsaWRQb3NpdGlvbihyb3cgKyBwYXduRGlyZWN0aW9uLCBjb2wgKyAxKSAmJiBib2FyZFtyb3cgKyBwYXduRGlyZWN0aW9uXVtjb2wgKyAxXS50b0xvd2VyQ2FzZSgpID09PSAncCcgJiYgaXNPcHBvbmVudFBpZWNlKGJvYXJkW3JvdyArIHBhd25EaXJlY3Rpb25dW2NvbCArIDFdLCBpc1doaXRlKSkgcmV0dXJuIHRydWU7XG5cbiAgICAvLyBDaGVjayBmb3Iga25pZ2h0IGF0dGFja3NcbiAgICBjb25zdCBrbmlnaHRNb3ZlcyA9IFtbLTIsIC0xXSwgWy0yLCAxXSwgWy0xLCAtMl0sIFstMSwgMl0sIFsxLCAtMl0sIFsxLCAyXSwgWzIsIC0xXSwgWzIsIDFdXTtcbiAgICBmb3IgKGNvbnN0IFtkciwgZGNdIG9mIGtuaWdodE1vdmVzKSB7XG4gICAgICAgIGNvbnN0IG5ld1JvdyA9IHJvdyArIGRyO1xuICAgICAgICBjb25zdCBuZXdDb2wgPSBjb2wgKyBkYztcbiAgICAgICAgaWYgKGlzVmFsaWRQb3NpdGlvbihuZXdSb3csIG5ld0NvbCkgJiYgYm9hcmRbbmV3Um93XVtuZXdDb2xdLnRvTG93ZXJDYXNlKCkgPT09ICduJyAmJiBpc09wcG9uZW50UGllY2UoYm9hcmRbbmV3Um93XVtuZXdDb2xdLCBpc1doaXRlKSkgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgLy8gQ2hlY2sgZm9yIGF0dGFja3MgZnJvbSBvdGhlciBwaWVjZXMgKHJvb2ssIGJpc2hvcCwgcXVlZW4sIGtpbmcpXG4gICAgZm9yIChjb25zdCBbZHIsIGRjXSBvZiBkaXJlY3Rpb25zKSB7XG4gICAgICAgIGxldCBuZXdSb3cgPSByb3cgKyBkcjtcbiAgICAgICAgbGV0IG5ld0NvbCA9IGNvbCArIGRjO1xuICAgICAgICBsZXQgZGlzdGFuY2UgPSAxO1xuICAgICAgICBcbiAgICAgICAgd2hpbGUgKGlzVmFsaWRQb3NpdGlvbihuZXdSb3csIG5ld0NvbCkpIHtcbiAgICAgICAgICAgIGNvbnN0IHBpZWNlID0gYm9hcmRbbmV3Um93XVtuZXdDb2xdLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICBpZiAocGllY2UgIT09ICcnKSB7XG4gICAgICAgICAgICAgICAgaWYgKGlzT3Bwb25lbnRQaWVjZShib2FyZFtuZXdSb3ddW25ld0NvbF0sIGlzV2hpdGUpKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChwaWVjZSA9PT0gJ3EnIHx8IFxuICAgICAgICAgICAgICAgICAgICAgICAgKHBpZWNlID09PSAncicgJiYgKGRyID09PSAwIHx8IGRjID09PSAwKSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgIChwaWVjZSA9PT0gJ2InICYmIGRyICE9PSAwICYmIGRjICE9PSAwKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgKHBpZWNlID09PSAnaycgJiYgZGlzdGFuY2UgPT09IDEpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG5ld1JvdyArPSBkcjtcbiAgICAgICAgICAgIG5ld0NvbCArPSBkYztcbiAgICAgICAgICAgIGRpc3RhbmNlKys7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7XG59XG5cbmZ1bmN0aW9uIGdldFN0cmFpZ2h0TW92ZXMoYm9hcmQ6IEJvYXJkLCByb3c6IG51bWJlciwgY29sOiBudW1iZXIsIGlzV2hpdGU6IGJvb2xlYW4pOiBbbnVtYmVyLCBudW1iZXJdW10ge1xuICAgIGNvbnN0IG1vdmVzOiBbbnVtYmVyLCBudW1iZXJdW10gPSBbXTtcbiAgICBjb25zdCBkaXJlY3Rpb25zID0gW1stMSwgMF0sIFsxLCAwXSwgWzAsIC0xXSwgWzAsIDFdXTtcblxuICAgIGZvciAoY29uc3QgW2RyLCBkY10gb2YgZGlyZWN0aW9ucykge1xuICAgICAgICBsZXQgbmV3Um93ID0gcm93ICsgZHI7XG4gICAgICAgIGxldCBuZXdDb2wgPSBjb2wgKyBkYztcbiAgICAgICAgd2hpbGUgKGlzVmFsaWRQb3NpdGlvbihuZXdSb3csIG5ld0NvbCkpIHtcbiAgICAgICAgICAgIGlmIChib2FyZFtuZXdSb3ddW25ld0NvbF0gPT09ICcnKSB7XG4gICAgICAgICAgICAgICAgbW92ZXMucHVzaChbbmV3Um93LCBuZXdDb2xdKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoaXNPcHBvbmVudFBpZWNlKGJvYXJkW25ld1Jvd11bbmV3Q29sXSwgaXNXaGl0ZSkpIHtcbiAgICAgICAgICAgICAgICBtb3Zlcy5wdXNoKFtuZXdSb3csIG5ld0NvbF0pO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG5ld1JvdyArPSBkcjtcbiAgICAgICAgICAgIG5ld0NvbCArPSBkYztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBtb3Zlcztcbn1cblxuZnVuY3Rpb24gZ2V0RGlhZ29uYWxNb3Zlcyhib2FyZDogQm9hcmQsIHJvdzogbnVtYmVyLCBjb2w6IG51bWJlciwgaXNXaGl0ZTogYm9vbGVhbik6IFtudW1iZXIsIG51bWJlcl1bXSB7XG4gICAgY29uc3QgbW92ZXM6IFtudW1iZXIsIG51bWJlcl1bXSA9IFtdO1xuICAgIGNvbnN0IGRpcmVjdGlvbnMgPSBbWy0xLCAtMV0sIFstMSwgMV0sIFsxLCAtMV0sIFsxLCAxXV07XG5cbiAgICBmb3IgKGNvbnN0IFtkciwgZGNdIG9mIGRpcmVjdGlvbnMpIHtcbiAgICAgICAgbGV0IG5ld1JvdyA9IHJvdyArIGRyO1xuICAgICAgICBsZXQgbmV3Q29sID0gY29sICsgZGM7XG4gICAgICAgIHdoaWxlIChpc1ZhbGlkUG9zaXRpb24obmV3Um93LCBuZXdDb2wpKSB7XG4gICAgICAgICAgICBpZiAoYm9hcmRbbmV3Um93XVtuZXdDb2xdID09PSAnJykge1xuICAgICAgICAgICAgICAgIG1vdmVzLnB1c2goW25ld1JvdywgbmV3Q29sXSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGlzT3Bwb25lbnRQaWVjZShib2FyZFtuZXdSb3ddW25ld0NvbF0sIGlzV2hpdGUpKSB7XG4gICAgICAgICAgICAgICAgbW92ZXMucHVzaChbbmV3Um93LCBuZXdDb2xdKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBuZXdSb3cgKz0gZHI7XG4gICAgICAgICAgICBuZXdDb2wgKz0gZGM7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbW92ZXM7XG59XG5cbmZ1bmN0aW9uIGlzVmFsaWRQb3NpdGlvbihyb3c6IG51bWJlciwgY29sOiBudW1iZXIpOiBib29sZWFuIHtcbiAgICByZXR1cm4gcm93ID49IDAgJiYgcm93IDwgOCAmJiBjb2wgPj0gMCAmJiBjb2wgPCA4O1xufVxuXG5mdW5jdGlvbiBpc09wcG9uZW50UGllY2UocGllY2U6IFBpZWNlLCBpc1doaXRlOiBib29sZWFuKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHBpZWNlICE9PSAnJyAmJiAoaXNXaGl0ZSA/IHBpZWNlID09PSBwaWVjZS50b0xvd2VyQ2FzZSgpIDogcGllY2UgPT09IHBpZWNlLnRvVXBwZXJDYXNlKCkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNDaGVjayhib2FyZDogQm9hcmQsIGlzV2hpdGVLaW5nOiBib29sZWFuKTogYm9vbGVhbiB7XG4gICAgY29uc3Qga2luZ1BpZWNlID0gaXNXaGl0ZUtpbmcgPyAnSycgOiAnayc7XG4gICAgZm9yIChsZXQgcm93ID0gMDsgcm93IDwgODsgcm93KyspIHtcbiAgICAgICAgZm9yIChsZXQgY29sID0gMDsgY29sIDwgODsgY29sKyspIHtcbiAgICAgICAgICAgIGlmIChib2FyZFtyb3ddW2NvbF0gPT09IGtpbmdQaWVjZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBpc1NxdWFyZVVuZGVyQXR0YWNrKGJvYXJkLCByb3csIGNvbCwgaXNXaGl0ZUtpbmcpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTsgLy8gVGhpcyBzaG91bGQgbmV2ZXIgaGFwcGVuIGluIGEgdmFsaWQgY2hlc3MgcG9zaXRpb25cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzQ2hlY2ttYXRlKGJvYXJkOiBCb2FyZCwgaXNXaGl0ZUtpbmc6IGJvb2xlYW4pOiBib29sZWFuIHtcbiAgICBpZiAoIWlzQ2hlY2soYm9hcmQsIGlzV2hpdGVLaW5nKSkgcmV0dXJuIGZhbHNlO1xuXG4gICAgZm9yIChsZXQgcm93ID0gMDsgcm93IDwgODsgcm93KyspIHtcbiAgICAgICAgZm9yIChsZXQgY29sID0gMDsgY29sIDwgODsgY29sKyspIHtcbiAgICAgICAgICAgIGNvbnN0IHBpZWNlID0gYm9hcmRbcm93XVtjb2xdO1xuICAgICAgICAgICAgaWYgKHBpZWNlICE9PSAnJyAmJiAoaXNXaGl0ZUtpbmcgPyBwaWVjZSA9PT0gcGllY2UudG9VcHBlckNhc2UoKSA6IHBpZWNlID09PSBwaWVjZS50b0xvd2VyQ2FzZSgpKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IG1vdmVzID0gZ2V0VmFsaWRNb3Zlcyhib2FyZCwgcm93LCBjb2wsIHRydWUsIGZhbHNlLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgaWYgKG1vdmVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiBtb3ZlUHV0c093bktpbmdJbkNoZWNrKGJvYXJkOiBCb2FyZCwgZnJvbVJvdzogbnVtYmVyLCBmcm9tQ29sOiBudW1iZXIsIHRvUm93OiBudW1iZXIsIHRvQ29sOiBudW1iZXIsIGlzV2hpdGU6IGJvb2xlYW4pOiBib29sZWFuIHtcbiAgICBjb25zdCBuZXdCb2FyZCA9IGJvYXJkLm1hcChyb3cgPT4gWy4uLnJvd10pO1xuICAgIG5ld0JvYXJkW3RvUm93XVt0b0NvbF0gPSBuZXdCb2FyZFtmcm9tUm93XVtmcm9tQ29sXTtcbiAgICBuZXdCb2FyZFtmcm9tUm93XVtmcm9tQ29sXSA9ICcnO1xuICAgIHJldHVybiBpc0NoZWNrKG5ld0JvYXJkLCBpc1doaXRlKTtcbn1cblxuIl0sIm5hbWVzIjpbImdldFZhbGlkTW92ZXMiLCJib2FyZCIsInJvdyIsImNvbCIsImNvbnNpZGVyUGluIiwiY2FuQ2FzdGxlS2luZ3NpZGUiLCJjYW5DYXN0bGVRdWVlbnNpZGUiLCJwaWVjZSIsImlzV2hpdGUiLCJ0b1VwcGVyQ2FzZSIsIm1vdmVzIiwidG9Mb3dlckNhc2UiLCJnZXRQYXduTW92ZXMiLCJnZXRSb29rTW92ZXMiLCJnZXRLbmlnaHRNb3ZlcyIsImdldEJpc2hvcE1vdmVzIiwiZ2V0UXVlZW5Nb3ZlcyIsImdldEtpbmdNb3ZlcyIsImZpbHRlciIsIm5ld1JvdyIsIm5ld0NvbCIsIm1vdmVQdXRzT3duS2luZ0luQ2hlY2siLCJkaXJlY3Rpb24iLCJzdGFydFJvdyIsInB1c2giLCJkY29sIiwiaXNPcHBvbmVudFBpZWNlIiwiZ2V0U3RyYWlnaHRNb3ZlcyIsImtuaWdodE1vdmVzIiwiZHIiLCJkYyIsImlzVmFsaWRQb3NpdGlvbiIsImdldERpYWdvbmFsTW92ZXMiLCJraW5nTW92ZXMiLCJnZXRDYXN0bGluZ01vdmVzIiwiY2FzdGxpbmdNb3ZlcyIsImlzQ2hlY2siLCJiYWNrUmFuayIsImlzU3F1YXJlVW5kZXJBdHRhY2siLCJvcHBvbmVudENvbG9yIiwiZGlyZWN0aW9ucyIsInBhd25EaXJlY3Rpb24iLCJkaXN0YW5jZSIsImlzV2hpdGVLaW5nIiwia2luZ1BpZWNlIiwiaXNDaGVja21hdGUiLCJsZW5ndGgiLCJmcm9tUm93IiwiZnJvbUNvbCIsInRvUm93IiwidG9Db2wiLCJuZXdCb2FyZCIsIm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./chessLogic.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./pieceImages.ts":
/*!************************!*\
  !*** ./pieceImages.ts ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nconst pieceImages = {\n    \"p\": \"https://images.chesscomfiles.com/chess-themes/pieces/neo/150/bp.png\",\n    \"r\": \"https://images.chesscomfiles.com/chess-themes/pieces/neo/150/br.png\",\n    \"n\": \"https://images.chesscomfiles.com/chess-themes/pieces/neo/150/bn.png\",\n    \"b\": \"https://images.chesscomfiles.com/chess-themes/pieces/neo/150/bb.png\",\n    \"q\": \"https://images.chesscomfiles.com/chess-themes/pieces/neo/150/bq.png\",\n    \"k\": \"https://images.chesscomfiles.com/chess-themes/pieces/neo/150/bk.png\",\n    \"P\": \"https://images.chesscomfiles.com/chess-themes/pieces/neo/150/wp.png\",\n    \"R\": \"https://images.chesscomfiles.com/chess-themes/pieces/neo/150/wr.png\",\n    \"N\": \"https://images.chesscomfiles.com/chess-themes/pieces/neo/150/wn.png\",\n    \"B\": \"https://images.chesscomfiles.com/chess-themes/pieces/neo/150/wb.png\",\n    \"Q\": \"https://images.chesscomfiles.com/chess-themes/pieces/neo/150/wq.png\",\n    \"K\": \"https://images.chesscomfiles.com/chess-themes/pieces/neo/150/wk.png\"\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (pieceImages);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3BpZWNlSW1hZ2VzLnRzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxjQUF1QztJQUMzQyxLQUFLO0lBQ0wsS0FBSztJQUNMLEtBQUs7SUFDTCxLQUFLO0lBQ0wsS0FBSztJQUNMLEtBQUs7SUFDTCxLQUFLO0lBQ0wsS0FBSztJQUNMLEtBQUs7SUFDTCxLQUFLO0lBQ0wsS0FBSztJQUNMLEtBQUs7QUFDUDtBQUVBLCtEQUFlQSxXQUFXQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3BpZWNlSW1hZ2VzLnRzPzI5YWYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcGllY2VJbWFnZXMgOiB7W2tleTogc3RyaW5nXTpzdHJpbmd9ID0ge1xuICAncCc6ICdodHRwczovL2ltYWdlcy5jaGVzc2NvbWZpbGVzLmNvbS9jaGVzcy10aGVtZXMvcGllY2VzL25lby8xNTAvYnAucG5nJyxcbiAgJ3InOiAnaHR0cHM6Ly9pbWFnZXMuY2hlc3Njb21maWxlcy5jb20vY2hlc3MtdGhlbWVzL3BpZWNlcy9uZW8vMTUwL2JyLnBuZycsXG4gICduJzogJ2h0dHBzOi8vaW1hZ2VzLmNoZXNzY29tZmlsZXMuY29tL2NoZXNzLXRoZW1lcy9waWVjZXMvbmVvLzE1MC9ibi5wbmcnLFxuICAnYic6ICdodHRwczovL2ltYWdlcy5jaGVzc2NvbWZpbGVzLmNvbS9jaGVzcy10aGVtZXMvcGllY2VzL25lby8xNTAvYmIucG5nJyxcbiAgJ3EnOiAnaHR0cHM6Ly9pbWFnZXMuY2hlc3Njb21maWxlcy5jb20vY2hlc3MtdGhlbWVzL3BpZWNlcy9uZW8vMTUwL2JxLnBuZycsXG4gICdrJzogJ2h0dHBzOi8vaW1hZ2VzLmNoZXNzY29tZmlsZXMuY29tL2NoZXNzLXRoZW1lcy9waWVjZXMvbmVvLzE1MC9iay5wbmcnLFxuICAnUCc6ICdodHRwczovL2ltYWdlcy5jaGVzc2NvbWZpbGVzLmNvbS9jaGVzcy10aGVtZXMvcGllY2VzL25lby8xNTAvd3AucG5nJyxcbiAgJ1InOiAnaHR0cHM6Ly9pbWFnZXMuY2hlc3Njb21maWxlcy5jb20vY2hlc3MtdGhlbWVzL3BpZWNlcy9uZW8vMTUwL3dyLnBuZycsXG4gICdOJzogJ2h0dHBzOi8vaW1hZ2VzLmNoZXNzY29tZmlsZXMuY29tL2NoZXNzLXRoZW1lcy9waWVjZXMvbmVvLzE1MC93bi5wbmcnLFxuICAnQic6ICdodHRwczovL2ltYWdlcy5jaGVzc2NvbWZpbGVzLmNvbS9jaGVzcy10aGVtZXMvcGllY2VzL25lby8xNTAvd2IucG5nJyxcbiAgJ1EnOiAnaHR0cHM6Ly9pbWFnZXMuY2hlc3Njb21maWxlcy5jb20vY2hlc3MtdGhlbWVzL3BpZWNlcy9uZW8vMTUwL3dxLnBuZycsXG4gICdLJzogJ2h0dHBzOi8vaW1hZ2VzLmNoZXNzY29tZmlsZXMuY29tL2NoZXNzLXRoZW1lcy9waWVjZXMvbmVvLzE1MC93ay5wbmcnLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgcGllY2VJbWFnZXM7XG5cbiJdLCJuYW1lcyI6WyJwaWVjZUltYWdlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./pieceImages.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\nvar REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\nvar enableRenderableContext = false;\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false;\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nvar REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (typeof type === 'function') {\n    if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    {\n      if (typeof type.tag === 'number') {\n        error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n      }\n    }\n\n    switch (type.$$typeof) {\n      case REACT_PROVIDER_TYPE:\n        {\n          var provider = type;\n          return getContextName(provider._context) + '.Provider';\n        }\n\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n\n        {\n          return getContextName(context) + '.Consumer';\n        }\n\n      case REACT_CONSUMER_TYPE:\n        {\n          return null;\n        }\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar assign = Object.assign;\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || enableRenderableContext  || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    {\n      var warnAboutAccessingRef = function () {\n        if (!specialPropRefWarningShown) {\n          specialPropRefWarningShown = true;\n\n          error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n        }\n      };\n\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, _ref, self, source, owner, props) {\n  var ref;\n\n  {\n    ref = _ref;\n  }\n\n  var element;\n\n  {\n    // In prod, `ref` is a regular property. It will be removed in a\n    // future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n      // Built-in properties that belong on the element\n      type: type,\n      key: key,\n      ref: ref,\n      props: props,\n      // Record the component responsible for creating this element.\n      _owner: owner\n    };\n  }\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // debugInfo contains Server Component debug information.\n\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\nvar didWarnAboutKeySpread = {};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, isStaticChildren, source, self) {\n  {\n    if (!isValidElementType(type)) {\n      // This is an invalid element type.\n      //\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    } else {\n      // This is a valid element type.\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing\n      // errors. We don't want exception behavior to differ between dev and\n      // prod. (Rendering will throw with a helpful message and as soon as the\n      // type is fixed, the key warnings will appear.)\n      var children = config.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    } // Warn about key spread regardless of whether the type is valid.\n\n\n    if (hasOwnProperty.call(config, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(config).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      {\n        ref = config.ref;\n      }\n\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && // Skip over reserved prop names\n      propName !== 'key' && (propName !== 'ref')) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    var element = ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    }\n\n    return element;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nvar ownerHasKeyUseWarning = {};\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = getComponentNameFromType(parentType);\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  // TODO: Move this to render phase instead of at element creation.\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar jsxDEV = jsxDEV$1 ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/YjQzMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CBharrath%20Kumar%5C%5Cchess%5C%5Capp%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);